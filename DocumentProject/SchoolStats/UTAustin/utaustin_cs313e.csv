course.canonical_course_id,course.course_id,course.course_name,course.course_num,course.dept_acro,course.dept_id,course.prof_id,course.prof_name,course.professor.dept_id,course.professor.name,course.professor.prof_id,course.professor.school_id,course.professor.teacher_id,course.resource_url,course.school_id,course.school_name,course.term,course.term_string,course.verified,course.year,course_id,db_filename,description,doc_date,document_pages.page_count,filehash,has_answers,is_featured,resource_url,title,total_views,type,type_ml,type_string,user_id,username
4972690,32709989,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2023,32709989,216735792,0.06Unit Step Response of Closed-Loop SystemI==Analytical Solution (y)MATLAB-Computed Solution (y.. MATLAB-Computed0.050.040.020.0145Time (s)Solution (yvalues)noZeroPole),10/31/23 22:46,1,c9ff7408e5b903be16829bb81333d8b0402c7628,FALSE,FALSE,https://www.coursehero.com/file/216735792/controls-3-3png/,controls_3_3.png,0,,Other,,1.00001E+14,lillyyang156
4972690,32709989,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2023,32709989,216733475,Step Response for Different K Values (Input-Output Pair) for Kh = 0.51.211|||11K=1* ) POUAo Se~K=3K=10|-{.ONo.(@)}Amplitude0.80.2 |1234Time (seconds)5678,10/31/23 22:46,1,4cd435e57ef17b8e65e51dfc7627aa3814718487,FALSE,FALSE,https://www.coursehero.com/file/216733475/hw5-3-2-1png/,hw5_3_2_1.png,0,,Other,,1.00001E+14,lillyyang156
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,216721909,Gift CardMark received a gift card for his favorite cafe from his daughter on Father'sday. The gift card is worth the amount of N dollars. He has to use it all atonce without any exchange possible. He wants to maximize the gift card'svalue by ordering,10/31/23 22:08,2,859bf43b24050a30c099ed5a3e87932662f145d4,FALSE,FALSE,https://www.coursehero.com/file/216721909/Gift-carddocx/,Gift card.docx,5,,Other,,1.00001E+14,MateCrabPerson1985
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,216721542,"If search key = 60, identify the sequence of nodes that are visited and the outcome.",10/31/23 22:04,1,262a210cc90623147a162658a091e0548b753f6f,FALSE,FALSE,https://www.coursehero.com/file/216721542/Screen-Shot-2023-10-31-at-100409-PMpng/,Screen Shot 2023-10-31 at 10.04.09 PM.png,0,,Other,,1.00001E+14,MateCrabPerson1985
4972690,32709989,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2023,32709989,216251754,"# File: Triangle.py# Description: A basic 2D Triangle class# Student Name:# Student UT EID:# Course Name:# Unique Number:import sysimport mathTOL = 0.01class Point(object):# constructordef _init_(self, x, y):self.x = float(x)self.y = float(y)",10/27/23 14:44,2,49c89649c89d8ff8b11d1c486053542a09f50874,FALSE,FALSE,https://www.coursehero.com/file/216251754/Trianglepy/,Triangle.py,0,,Other,,1.00001E+14,LieutenantRaccoonMaster355
4972690,32709989,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2023,32709989,216251448,"#File: Meet.py#Description: Determine earlist meet time interval for two people#Student Name:#Student UT EID:#Course Name:#Unique Number:import sysdef earliestPossibleMeeting(person1, person2, duration):'person1: List[List[int]person2: Lis",10/27/23 14:44,1,34ac71c1efe2e3348a0a32e4a9d621dfd79c0214,FALSE,FALSE,https://www.coursehero.com/file/216251448/Meetpy/,Meet.py,0,,Other,,1.00001E+14,LieutenantRaccoonMaster355
4972690,32709989,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2023,32709989,216251384,"#File: RightSum.py#Description: Get the right sum of the BST#Student Name:#Student UT EID:#Course Name:#Unique Number:import sysclass Queue(object):def _init_(self):self.queue = # add an item to the end of the queuedef enqueue(self, item)",10/27/23 14:44,2,2f46cd195fe3c518d523710e62bfa85c780a940f,FALSE,FALSE,https://www.coursehero.com/file/216251384/RightSumpy/,RightSum.py,0,,Other,,1.00001E+14,LieutenantRaccoonMaster355
4972690,32709989,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2023,32709989,216251335,"#File: LCA.py#Description: Determines the lowest common ancestor of two nodes in a binary tree#Student Name:#Student UT EID:#Course Name:#Unique Number:class Node (object):def _init_ (self, data, left=None, right=None):self.data = dataself.",10/27/23 14:44,2,648fee68b90e5cab97cf8320dd0eeb7af2ecf4ca,FALSE,FALSE,https://www.coursehero.com/file/216251335/LCApy/,LCA.py,0,,Other,,1.00001E+14,LieutenantRaccoonMaster355
4972690,32709989,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2023,32709989,216251333,"def generate_pd(n):if n % 2 = 1 or n = 0:return ans = [""]arr = createTree(n, ans)arr2 = arr.copy()print(arr2)for i in arr:c = 0for j in i:if j = ""p"":c += 1else:c -= 1if c != 0:# print(""removing"",i)arr2.remove(i)print(arr2)# return backtr",10/27/23 14:45,2,d6d187665134c710bdc9758d699ab51d7f5598c1,FALSE,FALSE,https://www.coursehero.com/file/216251333/Balancingpy/,Balancing.py,1,,Other,,1.00001E+14,LieutenantRaccoonMaster355
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,183743289,"# A top-down recursive implementationimport sys# Amount is amount = 4 and Coins are coins = {1, 2, 3},# 4 solutions: {1, 1, 1, 1}, {1, 1, 2}, {2, 2}, {1, 3}# Some documentation about the problem# https:/algorithmist.com/wiki/Coin_changedef coin_solu",12/12/22 7:03,2,0341e3c986ad2492492fef9226f7ad475946ccad,FALSE,FALSE,https://www.coursehero.com/file/183743289/example-018-DP-coin-change-numberspy/,example_018_DP_coin_change_numbers.py,3,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,183741525,"import sysimport argparse# import numpy as npimport cProfileimport pstatsimport ioclass Part:# 'PARTKEY', 'NAME', 'MFGR', 'BRAND', 'TYPE', 'SIZE', 'CONTAINER','RETAILPRICE', 'COMMENT'def _init_(self, *kwargs):self.partkey = kwargs.get('partkey',",12/12/22 7:03,3,bb4d986a65528a5a02803c1fe3b0e9a8c6cf991e,FALSE,FALSE,https://www.coursehero.com/file/183741525/example-025-python-profiling-partspy/,example_025_python_profiling_parts.py,4,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,183741524,"# A naive recursive implementation of 0-1 Knapsack Problem# A Brute Force Approachdef recursive_knapsack(values, weights, n, cap_weight):# Base Caseif n = 0 or cap_weight = 0 :return 0if (weights[n-1] &gt; cap_weight):return recursive_knapsack(values,",12/12/22 7:02,2,4ea55fcd0c1b010519d1cee5ea7dfb349c1e9299,TRUE,FALSE,https://www.coursehero.com/file/183741524/example-0111-knapsackpy/,example_011.1_knapsack.py,2,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,183741518,"# Code for Number of Cuts for a Given Rod Size:def cut_rod(p, n):r = s = for i in range(n + 1):r.append(0)s.append(0)for j in range(1, n + 1):max_price = -1for k in range(1, j + 1):new_price = 0if (k &lt; len(p):new_price = p[k] + r[j - k]else:",12/12/22 7:02,2,e16c522bc83c2abc4d060c2c8a74ae16fee5f56a,FALSE,FALSE,https://www.coursehero.com/file/183741518/example-011-rod-cuttingpy/,example_011_rod_cutting.py,1,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,183741498,"# A top-down recursive implementationimport sysdef matrix_chain_recursive(p, i, j):if (i = j):return 0# Set the maximum to be the largest possible number# if we get something better than this, then we can swap itmin = sys.maxsize# Start generating",12/12/22 7:03,3,41881246d19a842bedb1e88e62b063827639f952,FALSE,FALSE,https://www.coursehero.com/file/183741498/example-017-DP-matrix-chain-multiplicationpy/,example_017_DP_matrix_chain_multiplication.py,1,,Code,,1.00001E+14,BaronElementMule26
4972690,26896342,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,26896342,183741490,"class hash_table_with_double_hashing:'A Hash Table with Double Hashing'# initialize hash Tabledef _init_(self, size):self.size = size# initialize table with all elements 0self.table = list(None for i in range(self.size)self.elementCount = 0self.",12/12/22 7:02,2,4e4be8b6dbec785578a8ac66185aa4da58c2d456,FALSE,FALSE,https://www.coursehero.com/file/183741490/example-013-double-hash-tablepy/,example_013_double_hash_table.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,183741477,"import sysclass Stack (object):def _init_ (self):self.stack = # add an item to the top of the stackdef push(self, item):self.stack.append (item)# remove an item from the top of the stackdef pop(self):return self.stack.pop()# check the item on th",12/12/22 7:03,4,bbad43337ad00a6b28bb47f9bfd3a4d23027ec0e,FALSE,FALSE,https://www.coursehero.com/file/183741477/example-023-minimum-spanning-tree-Prims-algopy/,example_023_minimum_spanning_tree_Prims_algo.py,6,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,183741469,# Returns the maximum count of non-conflicting activities that can be performed bya single persondef lecture_hall_max_number_DP(activities):# Sort the activities according to increasing order of their start timeactivities.sort(key=lambda x: x[1][0])#,12/12/22 7:03,3,e2500c8b88211d9b9eced783474298a4625eebe8,FALSE,FALSE,https://www.coursehero.com/file/183741469/example-020-lecture-hallpy/,example_020_lecture_hall.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,183741467,"# Given a set of positive integers 'numbers_list', partition the set of'numbers_list' into two subsets, S1 and S2, such that the difference between# the sum of elements in S1 and S2 is minimized. The solution should return theminimum absolute differenc",12/12/22 7:03,3,be40bcbb309b662f2a7ae8a97e6f4b750d6c666c,FALSE,FALSE,https://www.coursehero.com/file/183741467/example-019-DP-find-min-abs-diff-two-partitionspy/,example_019_DP_find_min_abs_diff_two_partitions.py,2,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,183741465,"class Graph:# A simple representation of a weighted graphdef _init_(self, no_vertices):self.no_vertices = no_verticesself.edges = def add_edge(self, u, v, w):self.edges.append([u, v, w])# A Search functiondef find(self, parent, i):if parent[i] = ",12/12/22 7:03,2,2e2cc1a681390ac73c6b8e417c4636f3028b1327,FALSE,FALSE,https://www.coursehero.com/file/183741465/example-022-minimum-spanning-tree-Kruskal-algopy/,example_022_minimum_spanning_tree_Kruskal_algo.py,4,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,183740761,"import randomclass RBNode:def _init_(self, val):self.red = Falseself.parent = Noneself.val = valself.left = Noneself.right = Noneclass RBTree:def _init_(self):self.nil = RBNode(0)self.nil.red = Falseself.nil.left = Noneself.nil.right = Nones",12/12/22 7:02,3,748c65b01fe296d6b3fb32f537a12e2e706888ce,FALSE,FALSE,https://www.coursehero.com/file/183740761/example-012-Red-Black-Treepy/,example_012_Red_Black_Tree.py,7,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,181884140,#File: Secret.py# Description: Rotates a linked list to the right (clockwise) rot places timesnumber of times#Student Name:#Student UT EID:#Course Name: CS 313E#Unique Number:import sysclass Link (object):# do not change this constructordef,12/2/22 22:44,2,0bbeb8a55e765fd963040242e17ab8c897ee39d9,FALSE,FALSE,https://www.coursehero.com/file/181884140/Secretpy/,Secret.py,5,,Code,,1.00001E+14,CoachWorldBarracuda23
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,181883824,"import sys, copy# Add Your functions hereclass Houses:def _init_(self, can_buy, indexes_list, profits):self.can_buy = can_buyself.indexes_list = indexes_listself.profits = profitsdef index_finder(self, can_buy, prices):indexes = for i in range(le",12/2/22 22:43,3,977cf611cd3efda131e64605d535528aac2cfe18,FALSE,FALSE,https://www.coursehero.com/file/181883824/maximum-profitpy/,maximum_profit.py,10,,Code,,1.00001E+14,CoachWorldBarracuda23
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,181883823,#File: marbles.py#Description:#Student Name:#Student UT EID:#Course Name: CS 313E#Unique Number:#Date Created:#Date Last Modified:'A row of magic marbles can magically move to the right or left based on theirmagic.We use an array of non,12/2/22 22:43,1,b1324d651b6bbbadb31b3b9689ba184fc3bbc407,FALSE,FALSE,https://www.coursehero.com/file/181883823/marbles-1py/,marbles (1).py,12,,Code,,1.00001E+14,CoachWorldBarracuda23
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,181883820,#File: giftcard.py# Description: The gift card is worth the amount of N dollars.#Mark has to use it all at once without any exchangepossible.#He wants to maximize the value of the gift card by orderingmany different types of dessert#in the cafe ,12/2/22 22:43,1,1bb83e276b3db89f4dad7db58564f03a67722123,FALSE,FALSE,https://www.coursehero.com/file/181883820/giftcard-1py/,giftcard (1).py,5,,Code,,1.00001E+14,CoachWorldBarracuda23
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,181883671,"FindPrimeFactors.py# File: FindPrimeFactors.py# Student: Jesus Robledo# UT EID: jem6792# Course Name: CS303E## Date: 04/01/2022# Description of Program: For this program, it receives an int via input, as long asthe int doesn't equal 1, 0, or a neg",12/2/22 22:44,1,ce50ec277fbf5a945c03f3a187ceb55b5171dd9a,FALSE,FALSE,https://www.coursehero.com/file/181883671/FindPrimeFactorspyhtml/,FindPrimeFactors.py.html,2,,Code,,1.00001E+14,CoachWorldBarracuda23
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,181874978,"def generate_pd(n):if n % 2 = 1 or n = 0:return ans = backtrack(ans, n)return ansdef backtrack(ans, n, curr_balanced = None, num_left = 0, num_right = 0):.def main():n = int(input()print(generate_pd(n)if _name_ = ""_main_"":main()",12/2/22 22:41,1,876cd05fb62fbedaf3145330f50810025a2f67dc,FALSE,FALSE,https://www.coursehero.com/file/181874978/Balancing-1py/,Balancing (1).py,1,,Code,,1.00001E+14,CoachWorldBarracuda23
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,181848486,"#File: product.py# Description: Determine if there exists at least one of two elements, x and y,#in the list, the product of two elements, (x * y), is also a member of thelist and False otherwise.#Student Name:#Student UT EID:#Course Name: CS 3",12/2/22 18:43,1,7c93563ec0bc7f5421c24696608247e742dafcb9,FALSE,FALSE,https://www.coursehero.com/file/181848486/product-2py/,product (2).py,1,,Code,,1.00001E+14,CoachWorldBarracuda23
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,181848485,"# File: Triangle.py# Description: A basic 2D Triangle class# Student Name:# Student UT EID:# Course Name: CS 313E# Unique Number: 86610import sysimport mathTOL = 0.01class Point (object):# constructordef _init_(self, x = 0, y = 0):self.x = xs",12/2/22 18:43,2,0105ec93b3e17023bfd8c056c40c43d93844c1b5,TRUE,FALSE,https://www.coursehero.com/file/181848485/Triangle-1py/,Triangle (1).py,7,,Code,,1.00001E+14,CoachWorldBarracuda23
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,181843777,Assignment 9C313e - Elements of Software DesignGraph Flood Fill(100 points)Due Date on Canvas and Gradescope1DescriptionIn this assignment you will print the adjacency matrix for a graph and implement Breadth-First Search andDepth-First Search to ,12/2/22 18:42,5,652389a8fb470ea4d5767d4cce99e7ee0c541839,FALSE,FALSE,https://www.coursehero.com/file/181843777/Assignment-9pdf/,Assignment_9.pdf,64,,Assignment,,1.00001E+14,CoachWorldBarracuda23
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,178793008,"import numpy as npdef normalize(x):fac = abs(x).max()x_n = x / x.max()return fac, x_nx = np.array([1, 0])a = np.array([-3, 2],[2, 0])for i in range(8):x = np.dot(a, x)lambda_1, x = normalize(x)print('Eigenvalue:', lambda_1)print('Eigenvector:'",11/17/22 13:09,1,b5933a9d98b366a4c2d59eeff0949173b6157bb9,FALSE,FALSE,https://www.coursehero.com/file/178793008/powermethodpy/,powermethod.py,0,,Code,,1.00001E+14,PrivateWhaleMaster571
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,178793007,import heapqdef get_median(m_list):median = 0m_list_len = len(m_list)if (m_list_len % 2 = 0):median = (m_list[(m_list_len/2)-1] + m_list[(m_list_len/2)])/2else:median = m_list[(m_list_len/2)]return median,11/17/22 13:14,1,1fe63b557737fc574c636cf493bc6c7237dc57ea,FALSE,FALSE,https://www.coursehero.com/file/178793007/in-class-a6py/,in class a6.py,0,,Code,,1.00001E+14,PrivateWhaleMaster571
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,178792886,"import math##Point##class Point:# constructor with default valuesdef _init_(self, x = 0, y = 0, z = 0):self.x = float(x)self.y = float(y)self.z = float(z)# create a string representation of a Point# returns a string of the form (x, y, z)def ",11/17/22 13:15,3,9953dd486e02e0912a067951a387ae34563ad10b,FALSE,FALSE,https://www.coursehero.com/file/178792886/geometrypy/,geometry.py,20,,Code,,1.00001E+14,PrivateWhaleMaster571
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,178792884,"# -*- coding: utf-8 -*""Created on Tue Sep 6 11:49:16 2022@author: noelm""class Person:def _init_(self, *kwargs): #*kwargs gives freedom to put any parameter;pass dictself.id = kwargs.get('id')self.name = kwargs.get('name')def _str_(self) -&gt; str: #",11/17/22 13:15,3,d20610917dbf15da3e6d55cbe1cbc5ecf3a5ffee,FALSE,FALSE,https://www.coursehero.com/file/178792884/bank-owner-codepy/,bank owner code.py,1,,Code,,1.00001E+14,PrivateWhaleMaster571
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,178792883,"class Node(object):'This class represents a single Node.'def _init_(self, data):self.data = dataself.lChild = Noneself.rChild = Nonedef print_node(self, level=0):if self.rChild != None:self.rChild.print_node(level + 1)print(' ' * 4 * level + '-&gt;'",11/17/22 13:09,4,a2c0b763ec74143c170125314cecedc79bb07075,TRUE,FALSE,https://www.coursehero.com/file/178792883/EXP-TREE-EXAMPLEpy/,EXP TREE EXAMPLE.py,3,,Code,,1.00001E+14,PrivateWhaleMaster571
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,178792832,"import sysoperators = ['+', '-', '*', '/', '/', '%', '*']class Stack (object): #last one in, first one outdef _init_(self):self.stack = #add item to top of stackdef push(self, data):self.stack.append (data)#remove item from top of stackdef pop(se",11/17/22 13:12,3,6c13648278355c43be7ffe389391c4ee806307d0,FALSE,FALSE,https://www.coursehero.com/file/178792832/ExpressionTreepy/,ExpressionTree.py,12,,Code,,1.00001E+14,PrivateWhaleMaster571
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,178792807,"import unittestfrom geometry import *class TestGeometry(unittest.TestCase):def setUp(self):# We create a bunch of ponts first# The center of the coordinate system is called the originself.origin = Point(0,0,0)self.one_above_origin = Point(0, 1, 0)",11/17/22 13:15,2,ae49122c66dced88dda3d65ca5c406fd8ad7282d,FALSE,FALSE,https://www.coursehero.com/file/178792807/test-geometrypy/,test_geometry.py,24,,Code,,1.00001E+14,PrivateWhaleMaster571
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,178792772,"class Node(object):'This class represents a single Node.'def _init_(self, data):self.data = dataself.lChild = Noneself.rChild = Nonedef print_node(self, level=0):if self.lChild != None:self.lChild.print_node(level + 1)print(' ' * 4 * level + '-&gt;'",11/17/22 13:11,5,f17a23b110de283025cedf47d13b5c439d6df8ff,TRUE,FALSE,https://www.coursehero.com/file/178792772/in-class-assignment-5py/,in class assignment 5.py,2,,Code,,1.00001E+14,PrivateWhaleMaster571
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,178777212,"import numpy as npdef normalize(x):fac = abs(x).max()x_n = x / x.max()return fac, x_nx = np.array([1, 0, 0])a = np.array([1, 2, -2],[1, 1, 9],[0, 1, 9])for i in range(8):x = np.dot(a, x)lambda_1, x = normalize(x)print('Eigenvalue:', lambda_1)",11/17/22 13:09,1,754a44629e63dfe14367f68ab2fb6a4b75646c00,FALSE,FALSE,https://www.coursehero.com/file/178777212/power-methodpy/,power method.py,0,,Code,,1.00001E+14,PrivateWhaleMaster571
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,178777101,,11/17/22 13:13,1,b5ea35f519f201d4c05a21143649f9cf5d7764c6,FALSE,FALSE,https://www.coursehero.com/file/178777101/27pdf/,2.7.pdf,0,,Other,,1.00001E+14,PrivateWhaleMaster571
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,178175033,"import osimport sys# -PRINTING LOGIC, DON'T WORRY ABOUT THIS# PART-# this enables printing colors on Windows somehowos.system("")# code to reset the terminal colorRESET_CHAR = ""\u001b[0m""# color codes for the terminalCOLOR_DICT = {""black"": ""\u001b",11/14/22 20:22,4,b8432016c2bb0533042af595ff39bebbdb35966d,FALSE,FALSE,https://www.coursehero.com/file/178175033/GraphFillpy/,GraphFill.py,17,,Code,,1.00001E+14,jakeh1002
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,178175032,"def create_spiral(n): # This function creates the spiral with n as a parameter forthe dimensions of the spiralrows, columns = (n, n)h = int(rows/2) - 0.5)flagVar = [0 for i in range(columns)]for j in range(rows)]# These are setting values to begin ",11/14/22 20:21,2,c055cb75dc980d7923fb96aa0d9c87b68bb95abc,TRUE,FALSE,https://www.coursehero.com/file/178175032/Spiralpy/,Spiral.py,30,,Code,,1.00001E+14,jakeh1002
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,178175031,"import sysclass Node (object):# constructordef _init_(self, data):self.data = dataself.lChild = Noneself.rChild = Nonedef print_node(self, level=0):if self.lChild != None:self.lChild.print_node(level + 1)print(' ' * 3 * level + '-&gt;', self.data)",11/14/22 20:18,3,01cf33f89cf6e318d24ad3cedca989bce074d23c,FALSE,FALSE,https://www.coursehero.com/file/178175031/TestBinaryTreepy/,TestBinaryTree.py,7,,Code,,1.00001E+14,jakeh1002
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,178175030,"import sysoperators = ['+', '-', '*', '/', '/', '%', '*']class Stack (object):def _init_(self):self.stack = def push(self, data):self.stack.append (data)def pop(self):if(not self.is_empty():return self.stack.pop()else:return Nonedef is_empty(s",11/14/22 20:20,2,e98d8fe6ce7d4383bc2e71f99dfcff6ea95ab050,FALSE,FALSE,https://www.coursehero.com/file/178175030/ExpressionTreepy/,ExpressionTree.py,3,,Code,,1.00001E+14,jakeh1002
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,178175029,"import sysclass Link(object):def _init_(self,data):self.data = dataself.next = Nonedef _str_(self):return str(self.data)class CircularList(object):# Constructordef _init_ ( self ):self.rear = None # First element in the circle listself.end = No",11/14/22 20:18,3,fad78e19369c188f90472fd1c4a57a4790ae5dff,FALSE,FALSE,https://www.coursehero.com/file/178175029/Josephuspy/,Josephus.py,8,,Code,,1.00001E+14,jakeh1002
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,178155148,"import math# The encrypt function takes in a string and depending on the length of the stringadds asterisks to make the length of the# string equal to the closest perfect number. The string is then converted into a Kx K 3D list, where K^2 = the length",11/14/22 20:20,2,3c40f32619147cf8ee3d2cd600076b4e66ee0a15,FALSE,FALSE,https://www.coursehero.com/file/178155148/Cipherpy/,Cipher.py,5,,Code,,1.00001E+14,jakeh1002
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,178154002,"def are_anagrams(str1, str2):string1 = str(sorted(str1)string2 = str(sorted(str2)if (string1 = string2):return Trueelse:return Falsedef anagram_families(lst):flag = 0while flag &lt; len(lst):flag2 = lst[flag]flag3 = 0lst2 = for count in lst:if ",11/14/22 20:22,1,d14b222e7978cdfc316a6e2e5428d320cb3c5813,FALSE,FALSE,https://www.coursehero.com/file/178154002/Anagramspy/,Anagrams.py,2,,Code,,1.00001E+14,jakeh1002
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,178153959,"import sysdef spelling_test(s, l):counter = 0list = check = spelling_test_helper(list, l, counter)if (s in list):return Trueelse:return Falsedef spelling_test_helper(s, l, counter):top = len(l)if (top = counter):string = 'for i in l:string +",11/14/22 20:17,1,e4e7c338294748e3a12976d285dfb96085dc98a7,FALSE,FALSE,https://www.coursehero.com/file/178153959/SpellingTestpy/,SpellingTest.py,5,,Code,,1.00001E+14,jakeh1002
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177046254,"class Node(object):'This class represents a single Node.'def _init_(self, data):self.data = dataself.lChild = Noneself.rChild = Nonedef print_node(self, level=0):if self.lChild != None:self.lChild.print_node(level + 1)print(' ' * 4 * level + '-&gt;'",11/9/22 18:51,4,002568a5059a230f111b4ded03ba300d79062356,TRUE,FALSE,https://www.coursehero.com/file/177046254/example-009-binary-search-treepy/,example_009_binary_search_tree.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177046253,"import sysclass Stack (object):def _init_ (self):self.stack = # add an item to the top of the stackdef push(self, item):self.stack.append (item)# remove an item from the top of the stackdef pop(self):return self.stack.pop()# check the item on th",11/9/22 18:51,5,053c2499d53cb3246f1bf34a7b9075738f237b03,FALSE,FALSE,https://www.coursehero.com/file/177046253/example-009-1-graph-with-adj-matrixpy/,example_009_1_graph_with_adj_matrix.py,2,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177046252,"def cut_rod (p, n):# Initialize two lists of zeros with size nr = s = for i in range (n + 1):r.append (0)s.append (0)for j in range (1, n + 1):max_price = -1for k in range (1, j + 1):new_price = 0if (k &lt; len(p):new_price = p[k] + r[j - k]else",11/9/22 18:51,1,7ffd678ca43a22965d1a705ed8ccd60b9fafafc0,FALSE,FALSE,https://www.coursehero.com/file/177046252/example-010-rod-cuttingpy/,example_010_rod_cutting.py,2,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177046250,"import sysclass Stack (object):def _init_ (self):self.stack = # add an item to the top of the stackdef push (self, item):self.stack.append (item)# remove an item from the top of the stackdef pop (self):return self.stack.pop()# check the item on ",11/9/22 18:51,4,153884326f84f21fd71f3a99d1d9cf60c8be840c,FALSE,FALSE,https://www.coursehero.com/file/177046250/example-09-1-Graphpy/,example_09-1-Graph.py,4,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177046249,"import sysclass Stack (object):def _init_ (self):self.stack = # add an item to the top of the stackdef push(self, item):self.stack.append (item)# remove an item from the top of the stackdef pop(self):return self.stack.pop()# check the item on th",11/9/22 18:51,5,7c24d5570eafbb5fc55d410393bbff268c53337a,FALSE,FALSE,https://www.coursehero.com/file/177046249/example-009-2-graph-with-adj-matrixpy/,example_009_2_graph_with_adj_matrix.py,2,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177046248,"class Link(object):' This class represents a link between data items only'def _init_(self, data, next = None, previous = None):self.data = dataself.next = nextself.previous = previousclass DoublyLinkedList(object):def _init_(self):self.head = None",11/9/22 18:51,2,454f21574df78b8c483afff37cbedf85a9053290,FALSE,FALSE,https://www.coursehero.com/file/177046248/example-008-2-doubly-linked-listpy/,example_008_2_doubly_linked_list.py,1,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177046247,import unittestfrom example_007_queue import *class TestStudent(unittest.TestCase):def setUp(self):self.my_queue = Queue()# enqueue 10self.my_queue.enqueue(10)# enqueue 18self.my_queue.enqueue(18)# enqueue 1024self.my_queue.enqueue(1024)def tes,11/9/22 18:51,1,2d9c906158f54891995d9d8502a752f248d34054,FALSE,FALSE,https://www.coursehero.com/file/177046247/example-007-queue-tpy/,example_007_queue_t.py,2,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177046246,"class Link(object):' This class represents a link between data items only'def _init_ (self, data, next = None):self.data = dataself.next = nextdef _str_(self):return str(self.data) + "" -&gt; "" + str(self.next)class LinkedList(object):' This class imp",11/9/22 18:51,2,904dbc2e4eb2ef3a322ed48be71b21d8e406693e,FALSE,FALSE,https://www.coursehero.com/file/177046246/example-008-linked-listpy/,example_008_linked_list.py,3,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177045144,"# Recursive Top-Down implementationdef fib(n):if(n &lt;= 1):return nelse:return fib(n-1) + fib(n-2)# Recursive, Top-Down, Memoizedmem={}def fib_memoized(n):if n in mem:return mem[n]if n &lt;= 2:value = 1elif n &gt; 2:value = fib_memoized(n -1) + fib_",11/9/22 18:51,1,1c25f2b55aa282934ee2dea9ad5aa5cdcf1027c6,FALSE,FALSE,https://www.coursehero.com/file/177045144/example-0101-fib-memoizedpy/,example_010.1_fib_memoized.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177038697,"def merge(arr, l, m, r):'Merge Procedure function of two sorted arrays. Here the two arrays arewithin the same areon the left and right side. The left side index is from [l to m ] and rightside is from [m, r]'n1 = m - l + 1n2 = r - m# allocate temp",11/9/22 17:50,2,e0f5e4a13af7203dda0ff44684beef782f1bf9b3,FALSE,FALSE,https://www.coursehero.com/file/177038697/example-0061-mergesortpy/,example_006.1_mergesort.py,1,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177037736,"""The Decorator pattern is used to dynamically add a new features/functionalitiesto an object without changing its implementation. It differs from inheritancebecausethe new functionalities are attached to that particular object on-demand,not to the ent",11/9/22 17:50,2,c093dfc0daeee4adc883f4e21a6f9aab730115b3,FALSE,FALSE,https://www.coursehero.com/file/177037736/example-004-oop-decorator-patternpy/,example_004_oop_decorator_pattern.py,2,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177036968,"class Stack (object):def _init_ (self):self.stack = # add an item to the top of the stackdef push (self, item):self.stack.append(item)# remove an item from the top of the stackdef pop(self):if(not self.isEmpty():return self.stack.pop()else:retu",11/9/22 17:50,2,59d6a0230b233fa60d4f6e5e0d8655763122af36,FALSE,FALSE,https://www.coursehero.com/file/177036968/example-006-stackpy/,example_006_stack.py,3,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177036967,"from time import time# Now we want to run the timer n times.# def timer(func):#def f(*args, *kwargs):#before = time()#rv = func(*args, *kwargs)#after = time()#print(""Elapsed Time is: "", after - before)#return rv#return fdef ntimes(n):def",11/9/22 17:50,1,51c1c184db97c90613d91eae990aaac501196c89,FALSE,FALSE,https://www.coursehero.com/file/177036967/example-004-04-decorators-in-pythonpy/,example_004_04_decorators_in_python.py,2,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177036966,"class Queue(object):'Queue implements the FIFO principle.'def _init_ (self):self.queue = def enqueue (self, item):self.queue.append (item)def dequeue (self):if(not self.isEmpty():return self.queue.pop(0)else:return Nonedef isEmpty (self):retur",11/9/22 17:50,1,0d68ed046e0c7d13791cfd80ecac8944f549f794,FALSE,FALSE,https://www.coursehero.com/file/177036966/example-007-queuepy/,example_007_queue.py,1,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177036965,"class Car:'This class defines a basic car'def _init_(self, cspeed, ngears):self.speed = cspeedself.gears = ngearsdef run(self, speed):'This method runs the car with the given speed.'self.speed = speedprint(""Running with speed "", self.speed)def fu",11/9/22 17:50,3,4666f8b2423c0ab5480570ff910d08105127bc6b,FALSE,FALSE,https://www.coursehero.com/file/177036965/example-002-00-0-oop-featurespy/,example_002_00_0-oop-features.py,1,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177036964,"# run this script with python3 and pytho2.7 to see the difference.# change to# class A(object):# to see the difference.class A:def do_it(self):print(""method of A called"")class B(A):passclass C(A):def do_it(self):print(""method of C called"")clas",11/9/22 17:50,1,4641fa2138a9ec6eb15ee440a963ad4e80bb1541,FALSE,FALSE,https://www.coursehero.com/file/177036964/example-00200-multiple-inheritancpy/,example_002.00_multiple_inheritanc.py,1,,Code,,1.00001E+14,BaronElementMule26
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,177035975,"""# This is an example to read from standard input.# Run this python script as following# python3 example_001_hello_world.py &lt; example_data.in""import sysdef main():""This is a main function""data = sys.stdin.read()print(data)print(type(data)data_l",11/9/22 17:50,1,b14cb14000a079a843b0b43d8d63d727b3e28177,FALSE,FALSE,https://www.coursehero.com/file/177035975/example-001-hello-worldpy/,example_001_hello_world.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,175762038,"#File: Hull.py#Description:#Student Name: Kyle Hodowany#Student UT EID: kwh677#Partner Name:#Partner UT EID:#Course Name: CS 313E#Unique Number: 52530#Date Created: 9/26/2022#Date Last Modified: 9/26/2022import sys, mathclass Point (o",11/3/22 15:36,4,286052067e5fd3c162b37c38d2d94339658f0172,FALSE,FALSE,https://www.coursehero.com/file/175762038/Hullpy/,Hull.py,2,,Code,,1.00001E+14,CountValorHyena8
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,175761997,#File: Reducible.py#Description:#Student Name:#Student UT EID:#Partner Name:#Partner UT EID:#Course Name: CS 313E#Unique Number:#Date Created:#Date Last Modified:import sys# takes as input a positive integer n# returns True if n is p,11/3/22 15:34,4,c286430488a9459b62d35471fc14a0979312dd4f,TRUE,FALSE,https://www.coursehero.com/file/175761997/Reduciblepy/,Reducible.py,13,,Code,,1.00001E+14,CountValorHyena8
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,175761990,"#File: Poker.py#Description:#Student's Name: Kyle Hodowany#Student's UT EID: kwh677#Partner's Name:#Partner's UT EID:#Course Name: CS 313E#Unique Number: 52530#Date Created: 9/19/2022#Date Last Modified:9/19/2022import sys, randomclas",11/3/22 15:36,9,42d05bbed8749cf71721f2aca79d8762d022035e,TRUE,FALSE,https://www.coursehero.com/file/175761990/Pokerpy/,Poker.py,4,,Code,,1.00001E+14,CountValorHyena8
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,175761828,#File: recursion2.py#Description: Python file used to test recursion algorithms as discussed in class#Student Name: Kyle Hodowany#Student UT EID: kwh677#Partner's Name: Kyle Hodowany#Partner's UT EID:#Course Name: CS 313E#Unique Number:#D,11/3/22 15:35,6,56f62f824c1853766c7f3ef5fa8df606702ec90d,TRUE,FALSE,https://www.coursehero.com/file/175761828/recursion2py/,recursion2.py,1,,Code,,1.00001E+14,CountValorHyena8
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,175761826,#File: Tower.py# Description: Using recursive formula described in instructions to use 4 pegs tosolve larger Hanoi Tower problems#Student's Name: Kyle Hodowany#Student's UT EID: kwh677#Partner's Name:#Partner's UT EID:#Course Name: CS 313E#,11/3/22 15:35,2,c4e75941b8618512f663f2c7cc7166f8e7323d28,FALSE,FALSE,https://www.coursehero.com/file/175761826/Towerpy/,Tower.py,2,,Code,,1.00001E+14,CountValorHyena8
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,175761822,"#File: Palindrome.py#Description:#Student Name:#Student UT EID:#Partner Name:#Partner UT EID:#Course Name: CS 313E#Unique Number:#Date Created:# Date Last Modified:import sys# Input: a lowercase string with no digits, punctuation marks",11/3/22 15:35,2,65944eac886243cf55bbfced3a56f07cb4637554,FALSE,FALSE,https://www.coursehero.com/file/175761822/Palindromepy/,Palindrome.py,2,,Code,,1.00001E+14,CountValorHyena8
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,175761820,"#File: Boxes.py#Description:#Student Name:#Student UT EID:#Partner Name:#Partner UT EID:#Course Name: CS 313E#Unique Number:#Date Created:#Date Last Modified:import sys# Determines nest-ability of whole list of boxes, given that the l",11/3/22 15:35,3,073fe15714e2006cb4d64188d49d49ffbfa1e6c7,FALSE,FALSE,https://www.coursehero.com/file/175761820/Boxespy/,Boxes.py,9,,Code,,1.00001E+14,CountValorHyena8
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,175761743,#File: TestLinkedList.py#Description:#Student Name: Kyle Hodowany#Student UT EID: kwh677#Partner Name:#Partner UT EID:#Course Name: CS 313E#Unique Number: 52530#Date Created: 10/31/2022#Date Last Modified: 10/31/2022import randomclass,11/3/22 15:34,6,303462d9fb79f3acc81662ed6a18e20bd3760727,TRUE,FALSE,https://www.coursehero.com/file/175761743/TestLinkedListpy/,TestLinkedList.py,8,,Code,,1.00001E+14,CountValorHyena8
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,173965811,Assignment 3CS329e - Elements of Software DesignCompany Employees(100 points)Due Date on Canvas and Gradescope1DescriptionA company has different types of employees and requires to manage the calculation of their salaries basedon different paramet,10/25/22 17:19,4,a8495f886b0c21cf06818dbea486b9b1188ce9b8,FALSE,FALSE,https://www.coursehero.com/file/173965811/CS313e-Assignment-3pdf/,CS313e-Assignment-3.pdf,21,,Assignment,,1.00001E+14,CoachWorldBarracuda23
4972690,25548353,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2022,25548353,173963945,Assignment 8CS329E - Elements of Software DesignBinary Trees(100 points)Due Date on Canvas and Gradescope1DescriptionIn this assignment you will be adding to the classes Node and Tree that we developed in Binary Search TreeLecture and testing them,10/25/22 17:05,2,4fbed8ceed1e39bcdac842afa4eef2f8ad10227e,FALSE,FALSE,https://www.coursehero.com/file/173963945/CS313e-Assignment-8pdf/,CS313e-Assignment-8.pdf,1,,Assignment,,1.00001E+14,CoachWorldBarracuda23
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,168874035,#File: Spiral.py# Description: Create a matrix spiral of size n and return sums ofadjacent selected cells from input file spiral.in#Student Name:#Student UT EID:#Partner Name:#Partner UT EID:#Course Name: CS 313E#Unique Number: 52530#Date,9/27/22 11:01,4,c20aee058dfd1c3a6ef3a6b46ff7d013529b02b6,FALSE,FALSE,https://www.coursehero.com/file/168874035/A1-Spiraldocx/,A1 Spiral.docx,27,,Code,,1.00001E+14,CountValorHyena8
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,166389283,#File: DNA.py#Description: Find the longest common subsequences of 2 DNA strands#Student Name: Hayoung Lee#Student UT EID: hl22339#Partner Name: Jihee Kim#Partner UT EID: jk45385#Course Name: CS 313E#Unique Number: 52535#Date Created: 8/26/2022#D,9/14/22 16:11,2,83a6d8b683cc07530ee6e25f9e44bbcbaa206ecb,FALSE,FALSE,https://www.coursehero.com/file/166389283/DNApy/,DNA.py,2,,Code,,1.00001E+14,chyl89169
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,166385415,"#File: Intervals.py# Description: Merge and print the pair of numbers in the input file in ascendingorder of the lower end of the tuples, and print the tuple sorted by increasingorder of the size of the intervals.#Student Name: Hayoung Lee#Student",9/14/22 16:10,2,78f898eb096e72e748365284527fb13876123a32,FALSE,FALSE,https://www.coursehero.com/file/166385415/Intervalspy/,Intervals.py,2,,Code,,1.00001E+14,chyl89169
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,166385219,"import mathclass Point(object):#constructordef _init_(self, x = 0, y = 0):self.x = xself.y = y#get the distance to another Point objectdef dist(self, other):return math.hypot(self.x - other.x, self.y - other.y)#string representation of a Point ob",9/14/22 16:12,1,94af103bb79ee6b0480d967023794659f9dcc2f4,FALSE,FALSE,https://www.coursehero.com/file/166385219/examplepy/,example.py,1,,Code,,1.00001E+14,chyl89169
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,166385218,#File: DNA.py#Description: Encrypting the first line in input file by rotating 90 degreesclockwise and decrypting the second line in the input file by rotating 90 degreescounter clockwise#Student Name: Hayoung Lee#Student UT EID: hl22339#Partner Nam,9/14/22 16:10,2,d5f0179f727ee6b20d54bad2cb283885012ae0bd,FALSE,FALSE,https://www.coursehero.com/file/166385218/Cipherpy/,Cipher.py,4,,Code,,1.00001E+14,chyl89169
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,166385093,#File: Spiral.py# Description: Create a 2D array of given length that starts from the center andincrements clockwise. Then get the sum of the adjacent numbers of an input number.#Student Name: Hayoung Lee#Student UT EID: hl22339#Partner Name: Jih,9/14/22 16:11,3,709a6dd54120557069476072252bb069546a434e,FALSE,FALSE,https://www.coursehero.com/file/166385093/Spiralpy/,Spiral.py,14,,Code,,1.00001E+14,chyl89169
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,150588121,"""Utilities for Maps""from math import sqrtfrom random import sample# Rename the built-in zip (http:/docs.python.org/3/library/functions.html#zip)_zip = zipdef map_and_filter(s, map_fn, filter_fn):""Returns a new list containing the results of calling ",5/25/22 20:03,2,5729c822777ec4962177073b568f70c75db2f02b,FALSE,FALSE,https://www.coursehero.com/file/150588121/utilspy/,utils.py,4,,Code,,1.00001E+14,aybarua
4972690,16104569,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2021,16104569,140088119,CS 313E Elements of Software DesignMWF 1112 and MWF 12 office location: GDC 4.308 Office Phone: (512) 4717021 email: bulko@cs.utexas.edu fax: (512) 4718885 Syllabus: 313E.Syllabus.Fall17.pdfOffice Hours at a Glance:Who Location Day/Time Mo,4/3/22 22:17,2,1ef1b559ee73e19cc608ed5391f9a5efc8345be5,FALSE,FALSE,https://www.coursehero.com/file/140088119/cs313e-syllabus-1pdf/,cs313e_syllabus (1).pdf,5,,Syllabus,,1.00001E+14,BarristerDragonflyPerson85
4972690,32709989,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2023,32709989,212738818,Assignment 0CS329e - Elements of Software DesignDNA Sequences(100 points)No Grading for this assignment - Just for your practice1DescriptionDNA or deoxyribonucleic acid is a nucleic acid that contains genetic information. It is responsible forprop,9/23/23 17:42,4,51172cb9317709d4c7adf7c120d4cdb2215433eb,FALSE,FALSE,https://www.coursehero.com/file/212738818/CS313e-Assignment-0pdf/,CS313e-Assignment-0.pdf,0,,Other,,1.00001E+14,akj1000
4972690,32709989,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2023,32709989,212738787,"CS313E - Software DesignAssignment 4 - 100 PointsPlease note the honor code policy regarding this Assignment. You may not discuss particularquestions or discuss or transmit answers from the assignment with other people, except for theCS313e teaching t",9/23/23 17:42,2,e8a5f7fe784a07caab2f96b57e1203c04b5662d3,TRUE,FALSE,https://www.coursehero.com/file/212738787/CS313e-Assignment-4pdf/,CS313e-Assignment-4.pdf,2,,Other,,1.00001E+14,akj1000
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201342028,Lecture Notes on 23 Jan 2023* Principles of Object Oriented Programming - Abstraction - extract the attributes and behaviors of a real world object to represent in software - Encapsulation - put attributes and functionalities together to form a clas,4/29/23 15:30,1,3f6c698449b8b75f482144fad3a79e280c851aee,FALSE,FALSE,https://www.coursehero.com/file/201342028/Lect23Jantxt/,Lect23Jan.txt,0,,Notes,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201339070,Lecture Notes on 11 Jan 2023* What is good software design? - correct - efficient: time and space - readable / understandable - maintainable - robust / stable - scalable - aesthetically pleasing - user friendly* Write the Hello World program d,4/29/23 15:30,1,4e69e99a984d491929e44077fbcbe0a6a8f81e65,TRUE,FALSE,https://www.coursehero.com/file/201339070/Lect11Jantxt/,Lect11Jan.txt,1,,Code,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201339049,"Lecture Notes on 6 Mar 2023class Queens (object): # initialize the board def _init_ (self, n = 8): self.board =  self.n = n for i in range (self.n): row =  for j in range (self.n): row.append ('*') self.board.append (row) # print the board de",4/29/23 15:30,2,c7fa8c493ae680fc8c2ffdf9b8adc1a04ddbf738,FALSE,FALSE,https://www.coursehero.com/file/201339049/Lect06Martxt/,Lect06Mar.txt,0,,Code,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201339046,"Lecture Notes on 20 Mar 2023class Stack (object): def _init_(self): self.stack =  # add an item to the top of the stack def push (self, item): self.stack.append (item) # remove an item from the top of the stack def pop (self): return self.stack.",4/29/23 15:30,2,cecdec5c32cfdc952917d648f7279736df98f279,FALSE,FALSE,https://www.coursehero.com/file/201339046/Lect20Martxt/,Lect20Mar.txt,0,,Code,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201339039,"Lecture Notes on 10 Apr 2023Graphs* A graph is a network of vertices and edges.* In 1736 Leonhard Euler presented the solution to the Bridges of Konigsberg problem - this was the beginning of Graph Theory* Types of Graphs - (un) weighted, (un) dire",4/29/23 15:30,2,9d4484a7429793c9df83759236ab1c6519c0ebbd,FALSE,FALSE,https://www.coursehero.com/file/201339039/Lect10Aprtxt/,Lect10Apr.txt,0,,Notes,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201339023,"Lecture Notes on 12 Apr 2023* Euler Characteristic Equation V - E + F = 2* Five Regular Solids - Tetrahedron: 4 (V), 6 (E), 4 (F) - Cube: 8 (V), 12 (E), 6 (F) - Octahedron: 6 (V), 12 (E), 8 (F) - Dodecahedron: 20 (V), 30 (E), 12 (F) - Icosahedron",4/29/23 15:30,1,d03ac58a687cd4809de94b6de4207027a9f925f2,FALSE,FALSE,https://www.coursehero.com/file/201339023/Lect12Aprtxt/,Lect12Apr.txt,0,,Code,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201339015,"Lecture Notes on 19 Apr 2023* Test 3 is on Monday, 24 April 2023.* Do the quiz on that day. It is the honor code.* There is NO class on Monday (24 Apr 2023) and no office hours next week. * Directed Acyclic Graphs (DAGs)https:/www.cs.utexas.edu/us",4/29/23 15:30,6,85c05b26db1cea4ad465eef9af3a90e83fb86450,TRUE,FALSE,https://www.coursehero.com/file/201339015/Lect19Aprtxt/,Lect19Apr.txt,0,,Test,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201339014,"Lecture Notes on 18 Jan 2023* Structure of Python* Write the Hello World program def main(): print (""Hello World!"") main()* Characterset: ASCII / Unicode* Variables:  - must begin with a letter or underscore - can be followed by zero or more let",4/29/23 15:30,1,f43f5695c93c0dda0241f4eb16da1b25b488779b,FALSE,FALSE,https://www.coursehero.com/file/201339014/Lect18Jantxt/,Lect18Jan.txt,0,,Code,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201338985,Lecture Notes on 05 Apr 2023* Two more traversals - depth first search (dfs) and breadth first search (bfs)* The algorithms for the two searchs are given below:Depth First Search (DFS)1. Create a Stack2. Add the root to the Stack3. If the Stack is,4/29/23 15:30,3,c9c3c3181b9e17aaf28bface173f73df794cee8c,FALSE,FALSE,https://www.coursehero.com/file/201338985/Lect05Aprtxt/,Lect05Apr.txt,0,,Code,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201338970,"Lecture Notes on 01 Mar 2023# Recursive code to solve the Towers of Hanoi problemdef towers (n, source, spare, dest): if (n = 1): print ('Move disk from', source, 'to', dest) else: towers (n - 1, source, dest, spare) print ('Move disk from', sourc",4/29/23 15:30,1,cf5e41ce2204387c97917ae8ac6836002a8ad752,FALSE,FALSE,https://www.coursehero.com/file/201338970/Lect01Martxt/,Lect01Mar.txt,0,,Code,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201338961,"Lecture Notes on 27 Feb 2023* Permutation Problems  Q 1. A secretary writes letters to A, B, C, and D. She also prepares four envelopes addressed to A, B, C, and D. She manages to put all the letters in the wrong envelopes. Enumerate (list) all the w",4/29/23 15:30,1,260ec585e62a5f6c7bf1308682826930cf039929,FALSE,FALSE,https://www.coursehero.com/file/201338961/Lect27Febtxt/,Lect27Feb.txt,1,,Assignment,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201338952,"Lecture Notes on 22 Feb 2023# gets all subsets of a list adef sub_sets (a, b, idx): hi = len(a) if (idx = hi): print (b) return else: c = b[:] b.append(a[idx]) sub_sets (a, b, idx + 1) sub_sets (a, c, idx + 1)def main(): a = ['A', 'B', 'C', ",4/29/23 15:30,2,a03ffdc378d191056b838c1125a8a2451068a573,FALSE,FALSE,https://www.coursehero.com/file/201338952/Lect22Febtxt/,Lect22Feb.txt,0,,Code,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201338949,"Lecture Notes on 25 Jan 2023import mathclass Point (object): # constructor def _init_ (self, x = 0, y = 0): self.x = x self.y = y # get the distance to another Point object def dist (self, other): return math.hypot (self.x - other.x, self.y - ot",4/29/23 15:30,2,7b5442b28d0396d69bfa5abdcb7d0aed631cb2e8,FALSE,FALSE,https://www.coursehero.com/file/201338949/Lect25Jantxt/,Lect25Jan.txt,0,,Code,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201338942,Lecture Notes on 29 Mar 2023* Slides on Tresshttps:/www.cs.utexas.edu/users/mitra/csSpring2023/cs313/notes/Trees.pdf* Pictorial Representation of Treeshttps:/www.cs.utexas.edu/users/mitra/csSpring2023/cs313/notes/Binary_Trees.pdf* Operations and Alg,4/29/23 15:30,2,d38fc4efaf7769c42eaf6b8b2be0426d83e9e484,FALSE,FALSE,https://www.coursehero.com/file/201338942/Lect29Martxt/,Lect29Mar.txt,0,,Notes,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201338934,Lecture Notes on 20 Feb 2023# finds square root of n using binary searchdef sqrt_binary (n): old_guess = n new_guess = 1 lo = 1 hi = n tol = 1.0e-8 while (abs(new_guess - old_guess) &gt; tol): old_guess = new_guess mid = (lo + hi) / 2 mid2 = mid ,4/29/23 15:30,1,fefb097bedd81df505fa6303600111a07928bd08,FALSE,FALSE,https://www.coursehero.com/file/201338934/Lect20Febtxt/,Lect20Feb.txt,0,,Code,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201338908,Lecture Notes on 22 Mar 2023* Application of Linked Lists - implementation of Stacks and Queues in constant time - Denote connectivity of vertices in a graph - adjacency list - Sparse matrix representation  - Compact Hash Table - Dynamic memory all,4/29/23 15:30,1,4316350bb7f1d8a98f3259618803cfa393f9ec9d,FALSE,FALSE,https://www.coursehero.com/file/201338908/Lect22Martxt/,Lect22Mar.txt,0,,Notes,,1.00001E+14,BaronDanger2510
4972690,28362158,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,28362158,201338902,Lecture Notes on 09 Jan 2023# File: DNA.py# Description:# Student Name:# Student UT EID:# Partner Name:# Partner UT EID:# Course Name: CS 313E# Unique Number:# Date Created:# Date Last Modified:import sys# function to test other functionsdef,4/29/23 15:30,2,5023c7784ff38b324f888b12f870b8b0a5c4757f,FALSE,FALSE,https://www.coursehero.com/file/201338902/Lect09Jantxt/,Lect09Jan.txt,1,,Code,,1.00001E+14,BaronDanger2510
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199439319,-1A. Retrieve balance_due for vendor 95SELECT SUM(invoice_total - payment_total - credit_total) balance_dueFROM invoicesWHERE vendor_id = 95;-1B. Retrieve balance_due for vendor and output if greater than 0-CONNECT ap/ap; -don't need to connect since,4/15/23 9:32,7,b0ceac4e9686762120d3b449f7e6192d0d6308cc,FALSE,FALSE,https://www.coursehero.com/file/199439319/PL-SQL-Essentials-How-to-Write-PL-SQLsql/,PL SQL Essentials - How to Write PL SQL.sql,1,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199439287,"-Create test table for practicecreate table vendor_only_ca asselect vendor_name, vendor_address1, vendor_address2, vendor_city,vendor_phonefrom vendorswhere vendor_state= 'CA'order by vendor_city;-Use this to SELECT data from tableselect * from v",4/15/23 9:32,3,726e0c8c635b3b17bc3ce73236e38d78d15121ce,FALSE,FALSE,https://www.coursehero.com/file/199439287/SQL-Essentials-DML-Insert-Update-Deletesql/,"SQL Essentials DML (Insert, Update, Delete).sql",0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199439286,"-1 Date formatting-starting statementselect sysdate as unformatted,sysdate as formatted1,sysdate as formatted2,sysdate as formatted3,sysdate as formatted4from dual;-final statementselect sysdate as unformatted,trim(to_char(sysdate,'Month') | ' '",4/15/23 9:32,4,5c48a0bc742d45ba9c69e7ea9596403f925a5138,FALSE,FALSE,https://www.coursehero.com/file/199439286/Advanced-SQL-Working-with-data-types-and-functionssql/,Advanced SQL Working with data types and functions.sql,1,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199439281,- CLASS 18 - make some procedures- 1. Create a procedure called insert_vendor_contact that will insert- a new row into the vendor_contacts table-drop procedure insert_vendor_contact;CREATE OR REPLACE PROCEDURE insert_vendor_contact(vendor_id_paramv,4/15/23 9:32,2,dc3618daff8c1bede606c3b8dd6f9064e980f00d,FALSE,FALSE,https://www.coursehero.com/file/199439281/PL-SQL-Essentials-Stored-Procedures-Functionssql/,PL SQL Essentials - Stored Procedures  Functions.sql,1,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199439259,"-Questions 1 to 3select count(*),sum(invoice_total),round(avg(invoice_total),2),min(invoice_total),round(max(invoice_total),0),count(distinct vendor_id)from invoices;- Question 4. Sum of an expressionSELECTCOUNT(*) AS number_of_invoices,SUM(inv",4/15/23 9:32,2,f2e005a36ef4cb9cb0c1eaeb6702d4f52f36431c,FALSE,FALSE,https://www.coursehero.com/file/199439259/Advanced-SQL-How-to-Code-Summary-Queriessql/,Advanced SQL How to Code Summary Queries.sql,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199438833,"import randomimport pygameimport utilsclass SnakeEnv:def _init_(self, snake_head_x, snake_head_y, food_x, food_y):self.game = Snake(snake_head_x, snake_head_y, food_x, food_y)self.render = Falsedef get_actions(self):return self.game.get_actions()",4/15/23 9:20,4,6fd9580cd2f03c83543711519fb98b55a0649173,FALSE,FALSE,https://www.coursehero.com/file/199438833/snakepy/,snake.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199438819,"# neuralnet.py# -# Licensing Information: You are free to use or extend this projects for# educational purposes provided that (1) you do not distribute or publish# solutions, (2) you retain this notice, and (3) you provide clear# attribution to the Un",4/15/23 9:20,3,33dd3b4409ac8a764a908d262a1f074e2d00285a,FALSE,FALSE,https://www.coursehero.com/file/199438819/neuralnet-part1py/,neuralnet_part1.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199438792,"########search.py-Licensing Information: You are free to use or extend this projects foreducational purposes provided that (1) you do not distribute or publishsolutions, (2) you retain this notice, and (3) you provide clearattribution to the U",4/15/23 9:20,6,cef2bc936610126ccac7518335310abfa2dbb0a8,FALSE,FALSE,https://www.coursehero.com/file/199438792/searchpy/,search.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199438775,"import numpy as npimport utilsimport randomclass Agent:def _init_(self, actions, Ne, C, gamma):self.actions = actionsself.Ne = Ne # used in exploration functionself.C = Cself.gamma = gamma# Create the Q and N Table to work withself.Q = utils.cre",4/15/23 9:20,3,980e2307a10192e988771e056e0504744f381aae,FALSE,FALSE,https://www.coursehero.com/file/199438775/agentpy/,agent.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199438771,"import numpy as npDISPLAY_SIZE = 560GRID_SIZE = 40WALL_SIZE = 40WHITE = (255, 255, 255)RED = (255, 0, 0)BLUE = (72, 61, 139)BLACK = (0, 0, 0)GREEN = (0, 255, 0)NUM_ADJOINING_WALL_X_STATES=3NUM_ADJOINING_WALL_Y_STATES=3NUM_FOOD_DIR_X=3NUM_FOOD_",4/15/23 9:20,1,4f031de0158c56290b508002b05275212a55811b,FALSE,FALSE,https://www.coursehero.com/file/199438771/utilspy/,utils.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199438770,"#########classify.py-Licensing Information: You are free to use or extend this projects foreducational purposes provided that (1) you do not distribute or publishsolutions, (2) you retain this notice, and (3) you provide clearattribution to t",4/15/23 9:20,2,153239eb53dc10951565ea09951810cac655bfd4,FALSE,FALSE,https://www.coursehero.com/file/199438770/classifypy/,classify.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199437509,"-IN-CLASS EXERCISE FOR CLASS 15- 1. FIRST SUBQUERYSELECT avg(invoice_total)from invoices;- See below, which is just showing what the subquery essentially returnsSELECT invoice_id, invoice_totalFROM invoicesWHERE invoice_total &gt; (1879.74131578947368",4/15/23 9:32,6,d606507da6f71f9a64a540c1878cb5d6adc67855,TRUE,FALSE,https://www.coursehero.com/file/199437509/Advanced-SQL-How-to-Code-Sub-Queriessql/,Advanced SQL How to Code Sub Queries.sql,1,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199407845,fromfromfromfrombank import Bankbank_account_manager import Bank_Account_Manangement_Systembank_account_owner import Bank_Account_Ownerbank_account import Bank_Accountimportimportimportimportostimerandomstring# This is a helper function to,4/15/23 1:14,5,ad44760d541b3545ab923c26961419e0e564a73b,FALSE,FALSE,https://www.coursehero.com/file/199407845/bank-atm-user-interfacepy/,bank_atm_user_interface.py,1,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199407837,"from people import *from course import *dob1 = '2/12/2000'start_year1 = '1/8/2020'hiring_year1 = '1/8/2021'# Create a Student instancejohn = Student(""UT-ST-001"", ""John"", ""Doe"", dob1, start_year1)print(john)# Create a professor instanceprint(""#"")",4/15/23 1:13,1,7c4bf4eb4f90f3ec4c6cc65b83ab2f7002c5cad9,FALSE,FALSE,https://www.coursehero.com/file/199407837/example-runpy/,example_run.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199407833,"from people import *from course import *def gen_student_form():id = input(""Enter Student ID: "")firstname = input(""Enter Student's firstname:"")lastname = input(""Enter Student's lastname:"")dob = input(""Enter Student's date of birth (dd/mm/yyyy):"")sta",4/15/23 1:13,1,1dd394e15cdafc698172e5050e16c700fb044109,FALSE,FALSE,https://www.coursehero.com/file/199407833/interaction-formspy/,interaction_forms.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199407814,"class College:def _init_(self, *kwargs):'*kwargs is the keyworded arguments'self.name = kwargs['name']self.id = kwargs['id']# Initialize an empty college.self.professors = {}self.staff_members = {}self.courses = {}def add_student(self, student)",4/15/23 1:13,1,7e58446bf8b5e4fd8f359b123d621d44e1ba7392,FALSE,FALSE,https://www.coursehero.com/file/199407814/universitypy/,university.py,1,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199407810,"class Course:'This class represents a course'def _init_(self, *kwargs):self.id = kwargs['id']self.name = kwargs['name']if 'units' in kwargs:self.units = kwargs['units']else:self.units = Noneif 'tuition' in kwargs:self.tuition = kwargs['tuition",4/15/23 1:13,3,58cda108dba78fef88fffa98b77759f01ca357dd,FALSE,FALSE,https://www.coursehero.com/file/199407810/coursepy/,course.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199407790,"from bank_account import Bank_Accountclass Bank_Account_Manangement_System:def _init_(self):self.accounts = dict()def add_account(self, account):self.accounts[account.account_id] = accountdef del_account(self, account):self.accounts.remove(account.",4/15/23 1:14,1,29416d9e3cfd4e382e85630bc53b8d7139235510,FALSE,FALSE,https://www.coursehero.com/file/199407790/bank-account-managerpy/,bank_account_manager.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199407781,"class Person:'This class represents a person'def _init_(self, id, firstname, lastname, dob):self.id = idself.firstname = firstnameself.lastname = lastnameself.dob = dobdef _str_(self):return ""University ID Number: "" + self.id + ""Name: "" + self",4/15/23 1:13,3,797ada729ae9b6e2dddaba46bac08f2ef93a2c8b,FALSE,FALSE,https://www.coursehero.com/file/199407781/peoplepy/,people.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199407773,"class Bank:def _init_(self, name, rounting_number):self.name = nameself.rounting_number = rounting_numberdef set_bank_manager(self, bank_account_manager):self.bank_account_manager = bank_account_manager",4/15/23 1:14,1,c45718a1979e3f1de977da488333a768a37e58b2,FALSE,FALSE,https://www.coursehero.com/file/199407773/bankpy/,bank.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,199407548,"class Person:def _init_(self, *kwargs):self.id = kwargs.get('id')self.name = kwargs.get('name')def _str_(self) -&gt; str:return(""ID: ""+ self.id + "" - Name: "" + self.name)class Bank_Account_Owner(Person):def _init_(self, *kwargs):super()._init_(*kwarg",4/15/23 1:14,1,2c00f9dc633d40dfd8d99728ee31e9895cb0c4fe,FALSE,FALSE,https://www.coursehero.com/file/199407548/bank-account-ownerpy/,bank_account_owner.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,192970036,"# Move Data operations into Numpy# Use builtin functions and librariesnewlist = for word in oldlist:newlist.append(word.upper()newlist = map(str.upper, oldlist)# wiki cites map as a for loop moved into C code# Reduce Memory Footprints# # slow# in",2/26/23 12:52,1,39cfa19e021426802352e5142dfcd3557e7cd8ab,FALSE,FALSE,https://www.coursehero.com/file/192970036/performancepy/,performance.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,192970024,"class Course:def _init_(self, course_id, unit, tuition):self.course_id = course_idself.unit = unitself.tuition = tuitionclass Student:def _init_(self, firstname, lastname, dob, course_list):self.firstname = firstnameself.lastname = lastnameself.d",2/26/23 12:52,1,f37c2bc0a27f0b85258c6728cec5ce2e1cf1fbcc,FALSE,FALSE,https://www.coursehero.com/file/192970024/studentpy/,student.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,192969967,# Elements-of-Software-Design# General Study Guide for Course Elements of Software Design CS313e# Preparation for Class* Read the notes posted online for the day.* Read the relevant sections in the book. Each day's reading is given in theschedule.* ,2/26/23 12:52,2,c5a00b2ad7f464fe3fcc6dbe5b8e24a5505c1e1e,FALSE,FALSE,https://www.coursehero.com/file/192969967/READMEmd/,README.md,0,,Syllabus,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,192966985,"from _future_ import print_functionimport sysimport numpy as npimport timefrom datetime import datetimeif _name_ = ""_main_"":x = np.ones(200000000)*2y = np.ones(200000000)*2start = time.time()result1 =0result1=np.sum(x*y)done = time.time()print",2/26/23 12:52,1,55d4f148823615ee6f60bd1e9444eef63daef7ba,FALSE,FALSE,https://www.coursehero.com/file/192966985/numpyPerformancepy/,numpyPerformance.py,0,,Code,,1.00001E+14,BaronElementMule26
4972690,29083528,,313E,CS,275,103359,MITRA,0,MITRA,103359,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2023,29083528,192966974,"#File: HelloWorld.py# run this python script as following# python3 Example-Script-001-HelloWorld.pyimport sysdef main():x = sys.stdin.read()print(x)print(type(x)a = x.split("""")print(a[0])for value in a:print(value)print(sys.stdin.read()pri",2/26/23 12:52,1,89869cb0e8bbab5153859340f023e730d9d1430f,FALSE,FALSE,https://www.coursehero.com/file/192966974/Example-Script-001-HelloWorldpy/,Example-Script-001-HelloWorld.py,1,,Code,,1.00001E+14,BaronElementMule26
4972690,6455452,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2017,6455452,38084774,"Pre-course Survey ResultsAs of 8:45PM Tuesday, Jan 2211%All CS!96% areregisteredYou're all ready!Let's go!",2/19/19 0:07,7,48fbce326839142075299409b783afcac346bbe9,FALSE,FALSE,https://www.coursehero.com/file/38084774/ResultsS19pdf/,ResultsS19.pdf,3,lab,Slides,Lab,1.00001E+14,pikenanoots
4972690,13415144,,313E,CS,275,495929,"MITRA,SHYAMALK",0,"MITRA,SHYAMALK",495929,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,2,Winter,0,2020,13415144,50406571,Balancing Parenthesis:def areParanthesisBalanced(expr):s = # Empty stackllist.append(6)# Traversing the Expressionfor i in range(len(expr):if (expr[i] = '(' or expr[i] = '[' or expr[i] = '{'):# Push the element in the stacks.append(expr[i])cont,11/14/19 17:38,1,3a04019270dc9ff110f6fbcfa002ae8daae7e26b,FALSE,FALSE,https://www.coursehero.com/file/50406571/Test-Review-Doc-CS-313Edocx/,Test Review Doc CS 313E.docx,33,notes,Other,Notes,1.00001E+14,utomegaphigamma
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48654435,"Functions10/16/19, 8:14 PMFunctionsYou have already been using a function called main(). In this section we will be looking at how to defineother functions and how to call them. You can think of a function as a small piece of code that has onespecifi",10/16/19 20:15,2,25c2cd956c89239e1bedc9f23db3ee5bdf2f9a8d,FALSE,FALSE,https://www.coursehero.com/file/48654435/Functionspdf/,Functions.pdf,2,notes,Notes,Notes,1.00001E+14,JusticePuppy22890
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48652694,"10/16/19, 7:34 PMLecture Notes on 14 Oct 2019def does_fit (box1, box2):return (box1[0] &lt; box2[0] and box1[1] &lt; box2[1] and box1[2] &lt; box2[2])def main():# open the file for readingin_file = open (""./boxes.txt"", ""r"")# read the number of boxesline = ",10/16/19 19:34,1,4ec929d5a26b964275e9012cedba7e3866377cd7,FALSE,FALSE,https://www.coursehero.com/file/48652694/csFall2019cs313notesLect14Octpdf/,csFall2019:cs313:notes:Lect14Oct.pdf,27,notes,Notes,Notes,1.00001E+14,JusticePuppy22890
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48652611,"10/16/19, 7:34 PMLecture Notes on 07 Oct 2019Here are some problems on permutations and combinations that I wouldlike you to try. Q2 in particular is extremely challenging.* Permutation ProblemsQ1: A secretary writes letters to A, B, C, and D. She al",10/16/19 19:34,1,e7bdc6d1129be0d58881b58baf19385a18ec5994,TRUE,FALSE,https://www.coursehero.com/file/48652611/csFall2019cs313notesLect07Octpdf/,csFall2019:cs313:notes:Lect07Oct.pdf,7,notes,Assignment,Notes,1.00001E+14,JusticePuppy22890
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48652493,"10/16/19, 7:31 PMLecture Notes on 04 Sep 2019Learning Python* Write the Hello World programdef main():print (""Hello World!"")main()* Characterset: ASCII and UnicodeASCII: 7 bitsUnicode: 16 bits* Variables- start with a letter or underscore- fol",10/16/19 19:34,1,a6ded61ae9ae17c902b3f20087e6ac2eeaa0dc97,FALSE,FALSE,https://www.coursehero.com/file/48652493/csFall2019cs313notesLect04Seppdf/,csFall2019:cs313:notes:Lect04Sep.pdf,5,notes,Notes,Notes,1.00001E+14,JusticePuppy22890
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48652491,"10/16/19, 7:33 PMLecture Notes on 30 Sep 2019# recursive Fibonacci series with memodef fib_memo (n, memo):if (n = 0 or n = 1):return memo[n]else:if (n &gt;= len(memo):f = fib_memo (n - 1, memo) + fib_memo (n - 2, memo)memo.append (f)return felse:",10/16/19 19:34,1,90976a6641c48dff3e031cf54ec931e93ea45272,FALSE,FALSE,https://www.coursehero.com/file/48652491/csFall2019cs313notesLect30Seppdf/,csFall2019:cs313:notes:Lect30Sep.pdf,3,notes,Notes,Notes,1.00001E+14,JusticePuppy22890
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48652482,"10/16/19, 7:32 PMLecture Notes on 11 Sep 2019import mathclass Point (object):# constructordef _init_ (self, x = 0, y = 0):self.x = xself.y = y# get the distance to another Point objectdef dist (self, other):return math.hypot (self.x - other.x, s",10/16/19 19:34,1,5e427bf84e86e401abee95680f4ec781fe903a69,FALSE,FALSE,https://www.coursehero.com/file/48652482/csFall2019cs313notesLect11Seppdf/,csFall2019:cs313:notes:Lect11Sep.pdf,3,notes,Notes,Notes,1.00001E+14,JusticePuppy22890
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48652477,"10/16/19, 7:30 PMLecture Notes on 30 Aug 2019Learning Python* Write the Hello World programdef main():print (""Hello World!"")main()* Characterset: ASCII and UnicodeASCII: 7 bitsUnicode: 16 bits* Variables- start with a letter or underscore- fol",10/16/19 19:34,1,80c29808178fef607b02179ab2c31845586231d8,FALSE,FALSE,https://www.coursehero.com/file/48652477/csFall2019cs313notesLect30Augpdf/,csFall2019:cs313:notes:Lect30Aug.pdf,3,notes,Notes,Notes,1.00001E+14,JusticePuppy22890
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48652420,"10/16/19, 7:33 PMLecture Notes on 27 Sep 2019# recursive function to compute factorialdef fact (n):if (n = 0):return 1else:return n * fact (n - 1)def main():print (fact (4)main()# recursive function to solve Towers of Hanoi problemdef towers (",10/16/19 19:34,1,42d2449e233918dffb8534e2cfc91f725bec9a3e,FALSE,FALSE,https://www.coursehero.com/file/48652420/csFall2019cs313notesLect27Seppdf/,csFall2019:cs313:notes:Lect27Sep.pdf,5,notes,Notes,Notes,1.00001E+14,JusticePuppy22890
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48652395,"10/16/19, 7:33 PMLecture Notes on 04 Oct 2019def permute (a, lo):hi = len(a)if (lo = hi):print (a)else:for i in range (lo, hi):a[lo], a[i] = a[i], a[lo]permute (a, lo + 1)a[lo], a[i] = a[i], a[lo]def main():a = ['A', 'B', 'C', 'D', 'E']permut",10/16/19 19:34,1,c3e85ec267aa74ac6de7fdc841c5932d6ed68760,FALSE,FALSE,https://www.coursehero.com/file/48652395/csFall2019cs313notesLect04Octpdf/,csFall2019:cs313:notes:Lect04Oct.pdf,2,notes,Notes,Notes,1.00001E+14,JusticePuppy22890
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48651899,"10/16/19, 7:32 PMLecture Notes on 13 Sep 2019Programming Exercise: Given a set of points find the shortest distancebetween any two points in that set.Extension 1: Find the Point objects that have the shortest distanceand print them.Extension 2: Find",10/16/19 19:34,3,359aa1b366c156842a689470bb7c6ecc22e6af32,TRUE,FALSE,https://www.coursehero.com/file/48651899/csFall2019cs313notesLect13Seppdf/,csFall2019:cs313:notes:Lect13Sep.pdf,1,notes,Assignment,Notes,1.00001E+14,JusticePuppy22890
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48134837,"def permute(a, lo):hi=len(a)if lo = hi:print(a)else:for i in range(lo,hi):a[lo],a[i]=a[i],a[lo]permute(a,lo+1)a[lo],a[i]=a[i],a[lo]def main():a=['A','B','C','D']permute(a,0)main()# def permute(a, b, lo):#hi=len(a)#if a[0]!=b[0]and a[1]!=b",10/10/19 13:40,1,e23ae7c5415b0dfa780adb4de3af8329b2ca99b1,FALSE,FALSE,https://www.coursehero.com/file/48134837/permutepy/,permute.py,5,notes,Notes,Notes,1.00001E+14,TinsTinsTins
4972690,11627595,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,11627595,48134429,"10095	1455	-9584	93-54	40-75	-8846	34-46	-98-60	8-59	87-62	-6094	26-54	-4280	7558	-220	-49-96	7741	18-51	-2218	72-46	-34-30	55-42	-41-22	26-69	6781	2370	435	-4186	3769	-98-100	-3378	746	209	79-15	-9984	-6-94	22-33	21-",10/10/19 13:41,2,c0451758a8adfc9a17e1479249dcc0c9104d0790,FALSE,FALSE,https://www.coursehero.com/file/48134429/pointstxt/,points.txt,1,notes,Other,Notes,1.00001E+14,TinsTinsTins
4972690,9940254,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2019,9940254,42500837,Elements of Software DesignCS 313ESpring 2019[50739] TTh 12:30 pm - 2:00 pm RLM 6.104Instructor:Dr. William C. (Bill) Bulko (bulko@cs.utexas.edu)Office: GDC 4.308Phone: 512-471-7021Office Hours: posted at http:/www.cs.utexas.edu/~bulko/Proctors:,6/18/19 23:07,5,d6f17525815beca1bc292324581aea862565be5f,FALSE,FALSE,https://www.coursehero.com/file/42500837/313ESyllabusSpring19pdf/,313E.Syllabus.Spring19.pdf,13,notes,Syllabus,Notes,1.00001E+14,samawasthi
4972690,9940254,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2019,9940254,39010325,CS 313E - Elements of Software DesignDr. William C. BulkoAbstract Data Types‚Ä®2014StackQueueDequeUnorderedList,3/15/19 11:13,5,0928c323add3fdd51570f12ac77ba322f5164f95,FALSE,FALSE,https://www.coursehero.com/file/39010325/313E-04-Abstract-Data-Typespdf/,313E-04-Abstract Data Types.pdf,0,notes,Slides,Notes,1.00001E+14,thjk2
4972690,9940254,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2019,9940254,39009123,"CS 313E - Elements of Software DesignDr. William C. BulkoGetting Started with Python and IDLESome thoughts about programming""The only way to learn a new programming language is by writingprograms in it.""- B. Kernighan and D. Ritchie""Computers are ",3/15/19 11:13,65,bfe58a0fe6d5bbff367b5abe5e81c5b9155dbf0d,TRUE,FALSE,https://www.coursehero.com/file/39009123/313E-01-IntroAndPythonReviewpdf/,313E-01-IntroAndPythonReview.pdf,1,notes,Slides,Notes,1.00001E+14,thjk2
4972690,9940254,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2019,9940254,39009011,CS 313E - Elements of Software DesignDr. William C. BulkoObject-Oriented Programming‚Ä®2014Imperative vs. Object-Oriented ProgrammingImperative Programming (50s - 70s)uses statements to change a program's statea variable contains a val,3/15/19 11:13,5,ebc695943b5b71862d7362e45ddbb01681c1328a,FALSE,FALSE,https://www.coursehero.com/file/39009011/313E-02-OOPpdf/,313E-02-OOP.pdf,0,notes,Slides,Notes,1.00001E+14,thjk2
4972690,6455452,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2017,6455452,38035165,Refactorings1. model refactoring2. object oriented refactoringstructural equalities in object oriented programsobject oriented refactoringsOORef2-1introduction A refactoring is a semantics-preserving transformation that convertsan input program ,2/19/19 0:02,38,87484bad6547d4c124b51cee4a1c76e502de452a,TRUE,FALSE,https://www.coursehero.com/file/38035165/3-2Refactoringspptx/,3-2Refactorings.pptx,2,notes,Slides,Notes,1.00001E+14,pikenanoots
4972690,6455452,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2017,6455452,38035117,"Software DesignDon BatoryDepartment of Computer ScienceUniversity of Texas at Austin(c)dsbIntro-1What is software design? What is architecture? Just as carpentry, brick-laying, and plumbing is not architecture Software design is not programmi",2/19/19 0:02,36,65146af8695100f96c7e802bc7e6a04db1170ffc,TRUE,FALSE,https://www.coursehero.com/file/38035117/1-Intropptx/,1-Intro.pptx,4,notes,Slides,Notes,1.00001E+14,pikenanoots
4972690,6455452,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2017,6455452,38035106,"UML1. class diagrams2. object diagrams andconstraints3. metamodeling4. examples5. MDEtry your luck at modelingin class examples onmetamodelingUML4-1ex #1 hypergraphs A hypergraph isa generalization of a graph, where an edge can connect on",2/19/19 0:02,19,a0fecde6d0bc0fd7613acd752d694c93a1807f5e,TRUE,FALSE,https://www.coursehero.com/file/38035106/2-4UMLpptx/,2-4UML.pptx,3,notes,Slides,Notes,1.00001E+14,pikenanoots
4972690,6455452,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2017,6455452,38035103,UML1. class diagrams2. object diagrams andconstraints3. metamodeling4. examples5. MDEthe core of MDE and modeling in generalmetamodelingUML3-1today's lecture Recall this slide from the last lecture:UML3-2today's lecture The importance of,2/19/19 0:02,30,64b102ecc20429ff521115dbb819eaddac7a37eb,TRUE,FALSE,https://www.coursehero.com/file/38035103/2-3UMLpptx/,2-3UML.pptx,1,notes,Slides,Notes,1.00001E+14,pikenanoots
4972690,6455452,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2017,6455452,38035047,Refactorings1. model refactoring2. object oriented refactoringsrefactoring is everywheremodel refactoringMRef1-1a homeworkD#D#namexXyYzZA#namestartsAtendsAtffxyggyzgfgfxzMRef1-2a few of your answers...My SolutionYourS,2/19/19 0:02,30,997b7883f6a947321031bd4e44e067f7c24e6f7f,TRUE,FALSE,https://www.coursehero.com/file/38035047/3-1ModelRefactoringpptx/,3-1ModelRefactoring.pptx,2,notes,Slides,Notes,1.00001E+14,pikenanoots
4972690,6455452,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2017,6455452,38035045,UML1. class diagrams2. object diagrams andconstraints3. metamodeling4. examples5. MDEintergalactic standard of modeling languagesthe unified modeling languageUML1-1introduction UML (Unified Modeling Language) is a collection of diagrams tode,2/19/19 0:02,43,083960a12391ad5495cdd9f1a8fc7d5543f85333,TRUE,FALSE,https://www.coursehero.com/file/38035045/2-1UMLpptx/,2-1UML.pptx,6,notes,Slides,Notes,1.00001E+14,pikenanoots
4972690,6455452,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2017,6455452,38035018,UML1. class diagrams2. object diagrams andconstraints3. metamodeling4. examples5. MDE  finally! basics ofmodel driven engineeringUML5-1mde Is about automating the development of rote well-understood software.Everything that I talk about yo,2/19/19 0:02,35,3a6d4fdc8189d0a14ef19abf7d3227483ffdc13d,TRUE,FALSE,https://www.coursehero.com/file/38035018/2-5MDEpptx/,2-5MDE.pptx,3,notes,Slides,Notes,1.00001E+14,pikenanoots
4972690,6455452,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2017,6455452,38034955,"UML1. class diagrams2. object diagrams andconstraints3. metamodeling4. examples5. MDEobject models, constraintsand java streamsUML2-1more than class diagrams You also need constraints, when class diagrams are insufficientand they always are",2/19/19 0:02,42,9befa385b58e88b9f817abd2a5457a3d10917fad,TRUE,FALSE,https://www.coursehero.com/file/38034955/2-2UML-1pptx/,2-2UML (1).pptx,2,notes,Slides,Notes,1.00001E+14,pikenanoots
4972690,9940254,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2019,9940254,37901348,"HEF Find Evenialist;*# return the first Even integer Contained in "" alist ""#or print a message and generate an Error If no even integers are foundFor Val in alist .if Val $ 2 = = B !return Valraise ValueError "" Only odd numbers found in list ""HEF ",2/14/19 15:50,1,23470b2f0e27169546379e7c76cb8e650a66e2ca,FALSE,FALSE,https://www.coursehero.com/file/37901348/1png/,1.png,4,notes,Code,Notes,1.00001E+14,ThinhM6
4972690,9940254,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2019,9940254,37898981,"CS 313E - Elements of Software DesignDr. William C. BulkoExceptions and Assertions‚Ä®2014Common Types of ExceptionsTypeError:Passing an inappropriate type to an operation‚Ä®Ex.x = 5 + ""hello""IndexError:Out-of-range sequence indexEx.test = [1, 2, ",2/14/19 15:50,2,1e91ff7350c26c54a3dc598ebbe395702c4a92e2,FALSE,FALSE,https://www.coursehero.com/file/37898981/313E-03-Exceptionspdf/,313E-03-Exceptions.pdf,3,notes,Slides,Notes,1.00001E+14,ThinhM6
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,33719838,"Department of Computer SciencesUniversity of Texas at AustinCS 313E - Elements of Software Design (Spring 2017)Section: 51920, MWF 3:00 PM - 4:00 PM, GDC 2.216Instructor: Dr. Shyamal MitraOfce Hours: M 10:00 AM - 10:50 AMOfce Hours: WF 1:00 PM - 1:5",9/30/18 18:23,5,985b9bf7622c3ec4bca383e71d67603730fe6b49,FALSE,FALSE,https://www.coursehero.com/file/33719838/313E-Mitrapdf/,313E_Mitra.pdf,23,notes,Syllabus,Notes,1.00001E+14,adg122345
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,33037248,"Nearest Neighbors ClassifierDeepayan Chakrabarti (deepay@utexas.edu)1Nearest Neighbors ClassifierClassificationGiven X, predict a binary variable YConvert data to featuresCreate training dataCreate test dataPick a modelFit the modelPredi",9/11/18 14:39,123,0e1cb8821b02fe5621f1b7304d0ed423a6f4fd55,TRUE,FALSE,https://www.coursehero.com/file/33037248/Combined-powerpointspdf/,Combined_powerpoints.pdf,11,notes,Slides,Notes,1.00001E+14,aifazgowani1
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,21314053,Elements of Software DesignCS 313E [50940]Spring 2016UTC 3.104MWF 11:00 am - 12:00 pmInstructor:Dr. William C. (Bill) BulkoOffice: GDC 4.308Email: bulko@cs.utexas.eduPhone: 512-471-7021Office Hours:Posted at http:/www.cs.utexas.edu/~bulko/TA:,3/24/17 13:18,5,ad251ef72bcedaffdf480a6b08356a9fd7ee21cb,FALSE,FALSE,https://www.coursehero.com/file/21314053/313ESyllabusS16/,313E.Syllabus.S16,149,notes,Syllabus,Notes,1.00001E+14,mmmaino
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,17329597,"class Stack():def _init_(self):self.items = []def push(self,items):self.items.append(items)def pop(self):return self.items.pop()def peek(self):return self.items[-1]def isEmpty(self):return self.items = []def size(self):return len(self.items)d",10/31/16 13:38,1,666bd383716a6377581634eb6a9cafa4c3919485,FALSE,FALSE,https://www.coursehero.com/file/17329597/92316py/,9.23.16.py,15,notes,Notes,Notes,1.00001E+14,akshatasastry
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,17300984,"class Stack():def _init_(self):self.items = []def push(self,items):self.items.append(items)def pop(self):return self.items.pop()def peek(self):return self.items[-1]def isEmpty(self):return self.items = []def size(self):return len(self.items)d",10/31/16 13:38,1,fd836f45ed80f67fff2de30afe14abba4a16b903,FALSE,FALSE,https://www.coursehero.com/file/17300984/92816py/,9.28.16.py,7,notes,Other,Notes,1.00001E+14,akshatasastry
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,17298672,"#Date: September 12, 2016class Point:def _init_(self,xCoord,yCoord):self.x = xCoordself.y = yCoorddef _add_(self, other):new_x = self.x + other.xnew_y = self.y + other.yreturn Point(new_x,new_y)def _str_(self):return str(""("" + str(self.x) + "","" ",10/31/16 13:38,2,68ade08a9018dedc93d2523035fbc52a34756804,FALSE,FALSE,https://www.coursehero.com/file/17298672/91216py/,9.12.16.py,9,notes,Assignment,Notes,1.00001E+14,akshatasastry
4972690,5018382,Elements of Software Design,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2016,5018382,14074210,"# For each function that you wish to write, remove the comment symbol (#).# Write your code and test it on the command line. Supposing the function# you wrote was factorial. Then you will execute the following command:# python3 recursion1.py factorial",4/20/16 9:10,3,2825403929fa2d3c7f55367a711021f83941ce15,TRUE,FALSE,https://www.coursehero.com/file/14074210/Permutation/,Permutation,111,notes,Notes,Notes,1.00001E+14,sounderfeigned
4972690,5018382,Elements of Software Design,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2016,5018382,14074209,"class Matrix (object): def _init_ (self, row = 0, col = 0): self.matrix = [] self.row = row self.col = col # performs matrix addition def _add_ (self, other): if (self.row != other.row) or (self.col != other.col): return None new_matrix = Matrix ",4/20/16 9:09,2,29eb7a5d7439a8721c63d45e42185b6389ead1c0,FALSE,FALSE,https://www.coursehero.com/file/14074209/DenseMatrix/,DenseMatrix,17,notes,Other,Notes,1.00001E+14,sounderfeigned
4972690,16104569,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2021,16104569,86582821,"#File: TestLinkedList.py#Description:#Student Name: Anirudh Nair#Student UT EID: AN26439#Partner Name:#Partner UT EID:#Course Name: CS 313E#Unique Number: 50850#Date Created:#Date Last Modified:class Link(object):def _init_(self, data",3/31/21 10:11,9,b92cb57c4ed1237631b2da667c79219aa4eb5ec7,FALSE,FALSE,https://www.coursehero.com/file/86582821/TestLinkedListpy/,TestLinkedList.py,21,test_prep,Code,Test prep,1.00001E+14,DoctorDragonflyPerson242
4972690,16104569,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2021,16104569,86582804,#File: TestBinaryTree.py#Description:#Student Name: Anirudh Nair#Student UT EID: AN26439#Partner Name:#Partner UT EID:#Course Name: CS 313E#Unique Number:#Date Created: 11-19-20#Date Last Modified:11-19-20import sysclass Node (object),3/31/21 10:10,4,54ee681b3adf70402b095f333a74e6fedfb31f70,FALSE,FALSE,https://www.coursehero.com/file/86582804/TestBinaryTreepy/,TestBinaryTree.py,17,test_prep,Code,Test prep,1.00001E+14,DoctorDragonflyPerson242
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,40943820,Bank Debt Trade Document TestYou have been assigned to close a bank debt trade. The trader provides you with a copyof the LSTA Distressed Trade Confirmation that contains the correct terms of the bank debt trade(1st two attached pages). Your job is to ,5/2/19 9:40,8,a69280f9843b2573bc10e0d0630ce1d20eb0f7be,FALSE,FALSE,https://www.coursehero.com/file/40943820/BankDebtTradeTestdoc/,BankDebtTradeTest.doc,133,test_prep,Notes,Test prep,1.00001E+14,whyyyyyyrrr
4972690,9940254,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,3,Spring,0,2019,9940254,38524480,"CS 313E TEST 1 SUMMARYtry and excepto try:# .except (ValueError, TypeError):# Exception handler for any ValueError or TypeError thatoccurs.except (NameError, AttributeError):# A different handler for NameError and AttributeErrorexceptions.except",3/3/19 12:52,7,61377e31467df4930580f739e6e83d7fb896d99d,FALSE,FALSE,https://www.coursehero.com/file/38524480/CS-313E-TEST-1-SUMMARYdocx/,CS 313E TEST 1 SUMMARY.docx,71,test_prep,Notes,Test prep,1.00001E+14,sichun1247
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,35990885,# File: TestSparseMatrix.py# Description: Sparse matrix representation has a 1-D list where each#element in that list is a linked list having the column#number and non-zero data in each link#Student's Name: Kevin Le#Student's UT EID: kvl252#Par,11/28/18 12:54,4,e356984128f59e91b24bac98c38eb575cfed0d33,FALSE,FALSE,https://www.coursehero.com/file/35990885/TestSparseMatrixpy/,TestSparseMatrix.py,9,test_prep,Code,Test prep,1.00001E+14,kevinvle1997
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,35990872,#File: TestLinkedList.py#Description: Adding functions to a singly linked list class and testing them#Student's Name: Kevin Le#Student's UT EID: kvl252#Partner's Name:Victoria Do#Partner's UT EID: vvd97#Course Name: CS 313E#Unique Number: 5,11/28/18 12:54,7,a788b9dcb6e90a9d3ac9b26eb1cdbfbddf73eca7,TRUE,FALSE,https://www.coursehero.com/file/35990872/TestLinkedListpy/,TestLinkedList.py,88,test_prep,Code,Test prep,1.00001E+14,kevinvle1997
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,35990847,#File: ExpressionTree.py#Description: Develop methods for the Tree class and test them#Student's Name: Victoria Do#Student's UT EID: vvd97#Partner's Name: Kevin Le#Partner's UT EID: kvl252#Course Name: CS 313E#Unique Number: 51340#Date Cr,11/28/18 12:54,4,263b0203633c24513ed1fe4d7b72b79ed6836dd0,FALSE,FALSE,https://www.coursehero.com/file/35990847/TestBinaryTreepy/,TestBinaryTree.py,145,test_prep,Code,Test prep,1.00001E+14,kevinvle1997
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,30694081,"Study Guide for CS 313E Test 3 (Spring 2018)* You should know the following sorting algorithms and their efficiency - selection sort, bubble sort, insertion sort, merge sort and quick sort. You should be able to trace each of the algorithms for a giv",5/3/18 12:44,19,348ad0352ba2a7f4ef786e79b5ade8789661caca,TRUE,FALSE,https://www.coursehero.com/file/30694081/StudyGuide3txt/,StudyGuide3.txt,67,test_prep,Notes,Test prep,1.00001E+14,whyyyyyyrrr
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,29331136,"def bubbleSort(alist):Sequential COMPLEXITYfor passnum in range(1,len(alist):for sequetial search an unordered listprint(""Pass"",passnum)if the item is present : best case : firstfor i in range(1,len(alist):element in list O(1)if alist[i-1] &gt; alist",3/18/18 11:56,1,d5f32dab3fd01a748f50984f314e2770dd46d95d,FALSE,FALSE,https://www.coursehero.com/file/29331136/cs-exam-3-carddocx/,cs exam 3 card.docx,136,test_prep,Notes,Test prep,1.00001E+14,allymorgenthal
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,21094624,"class Fraction:def _init_(self, top, bottom):self.numer = topself.den = bottomdef _str_(self):return str(self.numer) + ""/"" + str(self.den)def _add_(self, otherfrac):newnum = self.numer * otherfrac.den + self.den * otherfrac.numernewden = self.den ",3/15/17 17:29,1,c5de28fdd729703f46de96b38ed096fe970e72fa,FALSE,FALSE,https://www.coursehero.com/file/21094624/cheet-sheet-1/,cheet sheet 1,78,test_prep,Notes,Test prep,1.00001E+14,williamsuieel
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,21094605,"class Node (object):def _init_(self,initdata):self.data = initdataself.next = Nonedef getData (self):return self.datadef getNext (self):return self.nextdef setData (self, newData):self.data = newDatadef setNext (self,newNext):self.next = newNex",3/15/17 17:30,1,56715b844063a3bf78815e87e56acb8b0085f079,FALSE,FALSE,https://www.coursehero.com/file/21094605/cheet-sheet-2/,cheet sheet 2,92,test_prep,Other,Test prep,1.00001E+14,williamsuieel
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,17303180,4 Basic Concepts of OOP:Abstraction: the separation of the logical (interface) andphysical (details) perspectives.Inheritance: the ability for one class to be related to anotherclass in much the same way that people can be related to oneanother. Clas,10/31/16 13:38,1,7d3a0765c6d04dca196a072670e2d061ec2ea46d,FALSE,FALSE,https://www.coursehero.com/file/17303180/Exam1CheatSheet/,Exam1CheatSheet,137,test_prep,Notes,Test prep,1.00001E+14,akshatasastry
4972690,4972690,Elements of Software Design,313E,CS,275,1095353,William Bulko,0,William Bulko,1095353,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2015,4972690,17299217,TypeAll typesOrderedUnorderedDoublyCircularUnorderedDoublyOrderedCircularLeft:OrderedUnorderedDoublyRight:CircularLeft:UnorderedCircularDoublyRight:OrderedDoublydef _init_(self):self.head = NoneMethoddef isEmpty (self):return se,10/31/16 13:38,1,96c867bfe481eca549663457f328ee9b93ba3e5c,FALSE,FALSE,https://www.coursehero.com/file/17299217/Exam2CheatSheet/,Exam2CheatSheet,97,test_prep,Notes,Test prep,1.00001E+14,akshatasastry
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300655,"#!/usr/bin/env python3""CS313e: Quiz #24 (7 pts) [Josh]"""" -1. In class for the doubly-linked list without a sentinel we wrote themethod pop() without considering the possibility that the list wasempty.Rewrite pop() to handle that case.(6 pts)""cla",4/28/15 18:54,1,d8716f05f253e5d4fa8b31fd5f77c9461b8d9ca3,TRUE,FALSE,https://www.coursehero.com/file/11300655/Quiz24/,Quiz24,16,test_prep,Test,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300645,"#!/usr/bin/env python3""CS313e: Quiz #16 (7 pts) [Josh]"""" -1. Define the class Fraction such that the following works.[Sec. 1.4, Pg. 36](6 pts)""class Fraction :def _init_ (self, n, d) :self.n = nself.d = ddef _eq_ (self, other) :return (self.n",4/28/15 18:54,1,417e18654d5451a0a5dc19c6b9aa2534f775dd6e,TRUE,FALSE,https://www.coursehero.com/file/11300645/Quiz16/,Quiz16,16,test_prep,Test,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300641,"#!/usr/bin/env python3""CS313e: Quiz #12 (7 pts) [Josh]"""" -1. What is the output of the following?(6 pts)FalseFalseTrue3 4 54 5 65 6 7""a = [2, 3, 4]p = iter(a)print(p is a)q = iter(p)print(q is a)print(q is p)for v in a :print(v + 1, en",4/28/15 18:54,1,e7553c0cd1e5493bb30d2d27ea1d0db722932c03,TRUE,FALSE,https://www.coursehero.com/file/11300641/Quiz12/,Quiz12,7,test_prep,Test,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300640,"#!/usr/bin/env python3""CS313e: Quiz #11 (7 pts) [Prateek]"""" -1. What is the output of the following?(6 pts)5-169-524""def reduce1 (f, x, y) :return f(x, y)print(reduce1(lambda x, y : x + y, 2, 3)print(reduce1(lambda x, y : x - y, 2, 3)prin",4/28/15 18:54,1,66827698898a696876bd7a563752e1eda7212f8f,TRUE,FALSE,https://www.coursehero.com/file/11300640/Quiz11/,Quiz11,7,test_prep,Other,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300639,"#!/usr/bin/env python3""CS313e: Quiz #10 (7 pts) [Josh]"""" -1. In the paper, ""A Bug and a Crash"" about the Ariane 5, what was thesoftware bug?(2 pts)the conversion of a 64-bit number to a 16-bit number"""" -2. What is the output of the following?(4 ",4/28/15 18:54,1,f88f6f8ceed7d337b91a7cd2fad9a5cf9970e4b5,TRUE,FALSE,https://www.coursehero.com/file/11300639/Quiz10/,Quiz10,8,test_prep,Test,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300638,"#!/usr/bin/env python3""CS313e: Quiz #8 (7 pts) [Prateek]"""" -1. What is the output of the following?[Sec. 3.3, Pg. 82-88](3 pts)4 3 5""class Stack :.x = Stack()x.push(2)x.push(3)x.push(4)print(x.pop(), end = "" "")print(x.pop(), end = "" "")x.p",4/28/15 18:54,1,c94d94d24f82588efc76c25e30a2f46e4f99cebd,TRUE,FALSE,https://www.coursehero.com/file/11300638/Quiz8/,Quiz8,7,test_prep,Test,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300637,"#!/usr/bin/env python3""CS313e: Quiz #7 (7 pts) [Josh]"""" -1. Which of the following practices demonstrates effective pairprogramming?[All I Really Needed to Know about Pair Programming I Learned inKindergarten](2 pts)a. Each partner writing separa",4/28/15 18:54,1,7dbccf377b28e9e49e4cef7208542fa8741dae70,TRUE,FALSE,https://www.coursehero.com/file/11300637/Quiz7/,Quiz7,12,test_prep,Test,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300636,"#!/usr/bin/env python3""CS313e: Quiz #9 (7 pts) [Fiona]"""" -1. Give the following code for UnorderedList, define the method add().[Sec. 3.6, Pg. 131](6 pts)""class Node :def _init_ (self, value, next) :self.value = valueself.next = nextclass List",4/28/15 18:54,1,e3b0cbfd06f19dd14680e2b7e7ced864e347d0d2,TRUE,FALSE,https://www.coursehero.com/file/11300636/Quiz9/,Quiz9,9,test_prep,Test,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300635,"#!/usr/bin/env python3""CS313e: Quiz #2 (7 pts) [Fiona]"""" -1. What is the output of the following?[Sec. 1.4, Pg. 12-13](2 pts)[2, 3, 2, 3, 2, 3][2, 3], [2, 3], [2, 3]""a = [2, 3]print([2, 3] * 3)print([a]* 3)"" -2. What is the output of the fol",4/28/15 18:54,1,1a59bcd68e7c27bc8ebc98f4c4ccde74f2221076,TRUE,FALSE,https://www.coursehero.com/file/11300635/Quiz3/,Quiz3,9,test_prep,Test,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300633,"-CS313e: Quiz #4 (7 pts) [Josh]-- 1. What happened in the three statements below? (6 pts)a. added file ""Foo.txt""b. git add Foo.txtc. git commit -m "".""-% git status# On branch masternothing to commit (working directory clean)% &lt;a. what happene",4/28/15 18:54,1,47b9d6a740a893fba38a94adca404d7ce226f18c,TRUE,FALSE,https://www.coursehero.com/file/11300633/Quiz4/,Quiz4,23,test_prep,Other,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300632,"#!/usr/bin/env python3""CS313e: Quiz #2 (7 pts) [Prateek]"""" -1. What is the output of the following?In the context of Collatz, what is f() computing?[Collatz](4 pts)511For odd n it's computing (3n + 1) / 2.(3n + 1) / 23n/2 + 1/2n + n/2 + 1/2n",4/28/15 18:54,1,0c4af5a8b84fe1aed8db0d9c664f92c1a154ceaa,TRUE,FALSE,https://www.coursehero.com/file/11300632/Quiz2/,Quiz2,8,test_prep,Test,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,11300631,"-CS313e: Quiz #1 (7 pts) [Fiona]-- 1. What is the limitation when using Python's assert statement instead of Python's unittest's assertion functions when testing code? (2 pts)-tests terminate on first failure- 2. Besides unit testing, in what ot",4/28/15 18:54,1,75a27da8f08e5c671b2437fbac9a6bf39369e9db,TRUE,FALSE,https://www.coursehero.com/file/11300631/Quiz1/,Quiz1,13,test_prep,Other,Test prep,1.00001E+14,Raioneru
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,9366639,"CS313e Fall 2013 QuizUTEID _The second page of this quiz has useful AVL tree information. You can tear this page off of the quiz.You dont need to turn this page in.1. [2 Points] If 10 is inserted into the following AVL tree, draw the resulting tree.2",5/15/14 18:25,4,d61580d58408a5a8c2d87339d289804fbd181c19,FALSE,FALSE,https://www.coursehero.com/file/9366639/Quiz-7/,Quiz #7,24,test_prep,Test,Test prep,1.00001E+14,Jewbaccamkx
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,9366636,"CS313e Fall 2013 Quiz 4Name _SOLUTIONS_ UTEID _1. [1 Point] Give an example of a valid syllogism/argument.If its raining outside, then the grass is wet.Its raining outside.Therefore, the grass is wet.2. [1 Point] State Gdel's Second Incompleteness T",5/15/14 18:23,6,71dcf31af3b5172366b211316173dea6ae437dd9,TRUE,FALSE,https://www.coursehero.com/file/9366636/Quiz-4/,Quiz #4,33,test_prep,Test,Test prep,1.00001E+14,Jewbaccamkx
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,9366635,ACS313e Fall 2013 Quiz 3Name _SOLUTIONS_ UTEID _1. [10 Points] Write the python code for the following UML Class and Instance diagram.Personparents2Jobkids0.*namenamehas1employees0.*p2p1name = philkids = [p3]has = [j1]name = ritap3n,5/15/14 18:23,1,1180ff3ca1e04e5fde1083c3023db18e3b718180,TRUE,FALSE,https://www.coursehero.com/file/9366635/Quiz-3/,Quiz #3,57,test_prep,Test,Test prep,1.00001E+14,Jewbaccamkx
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,9366634,"ACS313e Fall 2013 Quiz 6UTEID _1. [2 Points] Write one of the versions of factorial discussed in class.factorial = lambda n : 1 if n = 0 else n * factorial(n-1)print factorial(4)factorial = lambda n, a: a if n = 1 else factorial(n-1, n*a)print fact",5/15/14 18:23,1,c39dea30f9ad60e3918eb57e7672f13b6b2c9c0b,TRUE,FALSE,https://www.coursehero.com/file/9366634/Quiz-6/,Quiz #6,35,test_prep,Test,Test prep,1.00001E+14,Jewbaccamkx
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,9366633,ACS313e Fall 2013 Quiz 5UTEID _1. [10 Points] Sort the following list using the Quick Sort algorithm discussed in class. Show each step.[2-&gt;&lt;-&gt;&lt;-&gt;-&gt;&lt;-&gt;&lt;-&gt;&lt;-6 5 8 4 9 1 3 7 0][_ 6 5 8 4 9 1 3 7[0 6 5 8 4 9 1 3 7[0 _ 5 8 4 9 1 3 7[0 1 5 8 4 ,5/15/14 18:23,1,73f9b1042ed57a5ded35189730deaecf57693136,TRUE,FALSE,https://www.coursehero.com/file/9366633/Quiz-5/,Quiz #5,14,test_prep,Test,Test prep,1.00001E+14,Jewbaccamkx
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,9366632,"CS313e Fall 2013 Quiz 2AName _SOLUTIONS_ UTEID _1. [10 Points] Complete the Aristotle example below by adding the human class. The class should haveIQ and sports_played attributes with default values of 100, and Football respectively. Use an_init_ fu",5/15/14 18:22,2,7f20385cc4cecdaffe98c05df1e0d05e52ceda14,TRUE,FALSE,https://www.coursehero.com/file/9366632/Quiz-2/,Quiz #2,35,test_prep,Test,Test prep,1.00001E+14,Jewbaccamkx
4972690,10096682,,313E,CS,275,94285,,0,,94285,2339,,https://www.coursehero.com/sitemap/schools/2339-University-of-Texas/courses/4972690-CS313E/,2339,University of Texas,1,Fall,0,2019,10096682,9366630,"CS313e Fall 2013 Midterm ExamName _SOLUTIONS_ UTEID _1. [5 Points] Show that the following propositional logic statements are equivalent. You can do this by hand,i.e., you dont need to write python code for this problem.P and (P or Q) is equivalent to",5/15/14 18:22,9,b492d70d063d53f0a887a56ba17ed1b3012e2f1a,TRUE,FALSE,https://www.coursehero.com/file/9366630/C-S-313E-Midterm-Solutions/,[C S 313E] Midterm (Solutions),321,test_prep,Test,Test prep,1.00001E+14,Jewbaccamkx